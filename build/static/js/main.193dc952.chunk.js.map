{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/Style.js","components/NewThreadForm.js","services/login.js","services/comments.js","services/users.js","reducers/loginReducer.js","components/Login.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Logout.js","reducers/commentsReducer.js","components/Comment.js","components/NewCommentForm.js","components/Thread.js","components/DeleteAccount.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","getToken","deleteThread","_ref4","_callee4","dispatch","_context4","threadService","_x4","threadReducer","toConsumableArray","index","findIndex","t","newState","filter","s","Button","styled","button","_templateObject","SmallButton","_templateObject2","Input","input","_templateObject3","TextArea","textarea","_templateObject4","Page","div","_templateObject5","Title","_templateObject6","Navigation","_templateObject7","HappyNotification","_templateObject8","OneThread","_templateObject9","CommentInformation","_templateObject10","CommentText","_templateObject11","mapDispatchToProps","addThread","token1","console","log","_ref2","_callee2","newThread","_context2","_x2","connect","user","props","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","t0","react_default","createElement","onSubmit","value","onChange","target","cols","rows","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","_context3","_x3","services_users","removeUser","request","logout","window","localStorage","clear","commentService","usersService","loginReducer","token2","token3","loginService","setItem","JSON","stringify","react_router","to","setUsername","password","setPassword","handleLogin","name","usersReducer","u","addUser","newUser","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","threads","comments","users","map","key","react_router_dom","onClick","e","handleLogout","deleteComment","commentReducer","c","editComment","editedComment","editedMessage","setEditedMessage","showButtons","comment","allComments","find","handleEditedChange","newCommentObject","changedComment","objectSpread","createdUser","addComment","newComment","commentMessage","setCommentMessage","addNewComment","commentObject","threadId","editThread","editedThread","changeDone","setChangeDone","thread","newThreadObject","changedThread","components_Comment","NewCommentForm","deleteUser","deleteAccountFunction","loggedUser","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","padding","style","components_Notification","exact","path","render","AllThreads","Login","components_NewUserForm","components_Logout","components_DeleteAccount","NewThreadForm","match","components_Thread","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.193dc952.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n  }\n  return null\n\n}\n\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null){\n\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken,\n  getToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_THREAD':\n      return [...state, action.data]\n    case 'INITIALIZE_THREADS':\n      return action.data\n    case 'EDIT_THREAD':\n      // eslint-disable-next-line no-case-declarations\n      const index = state.findIndex(t => t.id === action.data.id)\n      // eslint-disable-next-line no-case-declarations\n      const newState = [...state]\n      newState[index] = action.data\n      return newState\n    case 'DELETE_THREAD':\n      // eslint-disable-next-line no-case-declarations\n      const newstate = state.filter(s => s.id !== action.data)\n      return newstate\n    default:\n      return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n\n  const token1 = threadService.getToken()\n\n  console.log('thread token', token1)\n\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n  const token1 = threadService.getToken()\n\n  console.log('thread token', token1)\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\n\nexport default threadReducer","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: silver;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  `\n\nconst SmallButton = styled.button`\n  background: silver;\n  font-size: 0.75em;\n  margin: 0.25em;\n  padding: 0.1em 0.3em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\n\nconst Input = styled.input`\n  margin: 0.25em;\n  `\nconst TextArea = styled.textarea`\nmargin: 0.25em;\n`\nconst Page = styled.div`\n  padding: 1em;\n  background: mintcream;\n`\nconst Title = styled.div`\n  background: steelblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  margin: 1em;\n  color: white;\n`\n\nconst Navigation = styled.div`\n  background: skyblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n`\nconst HappyNotification = styled.div`\n  margin: 1em;\n  padding: 0.5em 1.3em;\n  border: 2px solid black;\n  border-radius: 2px;\n  background: white;\n`\n\n\nconst OneThread = styled.div`\n  margin: 0.3em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n`\n\nconst CommentInformation = styled.div`\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n  font-size: 0.75em;\n`\nconst CommentText = styled.div`\n\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: white;\n  font-size: 1.2em;\n`\n\n\nexport { TextArea, Title, CommentInformation, CommentText, Button, Input, Page, Navigation, HappyNotification, OneThread, SmallButton }","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\nimport { Input, TextArea, Button } from './Style'\n\nconst newThreadForm = (props) => {\n\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n\n    setNewTitle('')\n    setNewMessage('')\n\n\n    try {\n      await props.addThread(threadObject)\n      props.setNotification('New thread added')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to create new comment')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <Input value={newTitle}\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <div>\n            <TextArea cols='50' rows='3' value={newMessage}\n              onChange={handleMessageChange} />\n          </div>\n        </div>\n        <Button type='submit'>add</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  \n\n  // try catch tähän, sitten saadaan virhe ulos ehkä?\n  const response = await axios.post(baseUrl, credentials)\n  console.log('response', response)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n      \n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n\nconst update = async (updatedObject) => {\n\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  }\n\n  return null\n}\n\nconst removeComment = async (id) => {\n\n\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n \n    return response.data\n  }\n  return null\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment,\n  getToken\n}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n\n}\n\nconst removeUser = async (id) => {\n\n  console.log('id', id)\n\n  console.log('token', token)\n\n  if (token !== null) {\n    console.log('token', token)\n\n    const config = {\n      headers: { Authorization: token },\n    }\n    console.log('config', config)\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    console.log('request', request)\n    return request.then(response => response.data)\n  }\n  console.log('failed')\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  removeUser,\n  removeToken,\n  setToken,\n  getToken\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\nimport usersService from './../services/users'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    usersService.setToken(data.token)\n\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n\n    const user = await loginService.login(data)\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n    console.log('user', user)\n\n    threadService.setToken(user.token)\n    commentService.setToken(user.token)\n    usersService.setToken(user.token)\n\n    const token1 = threadService.getToken()\n    const token2 = usersService.getToken()\n    const token3 = commentService.getToken()\n\n    console.log('thread token', token1)\n    console.log('userstoken', token2)\n    console.log('commenttoken', token3)\n   \n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n    usersService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Button, Input } from './Style'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const user = {\n      username: username,\n      password: password\n    }\n    try {\n      await props.login(user)\n      props.setNotification('Welcome!')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Wrong username or password!')\n    }\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <Input type=\"text\" value={username} name='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <Input type=\"password\" value={password} name='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <Button type='submit'>login</Button>\n        </div>\n      </form>\n    </div>\n  )\n\n\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  case 'DELETE_USER':\n    // eslint-disable-next-line no-case-declarations\n    console.log('action.data', action.data)\n    const newstate = state.filter(u => u.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n\n  const token1 = usersService.getToken()\n\n  console.log('users token', token1)\n  console.log('id', id)\n  return async dispatch => {\n    await usersService.removeUser(id)\n    dispatch({\n      type: 'DELETE_USER',\n      data: id\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Input, Button } from './Style'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    setNewName('')\n    setNewPassword('')\n    setNewUsername('')\n\n    try {\n      await props.addUser(newUserObject)\n      props.setNotification('New user added!')\n    } catch (e) {\n      props.setNotification('Username must be unique')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <Input type='text' value={newUsername} name='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <Input type='text' value={newName} name='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <Input type='password' value={newPassword} name='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <Button type='submit'>Add a new user</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { HappyNotification } from './Style'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div>\n      <HappyNotification>\n        {props.notification}\n      </HappyNotification>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OneThread } from './Style'\n\nconst allThreads = (props) => {\n\n  return (\n    <div>\n      {props.threads.map(t =>\n        <OneThread key={t.id}>\n          <Link key={t.id} to={`/threads/${t.id}`}> {t.title} </Link>\n          &nbsp;&nbsp; {t.comments.length} comments\n        </OneThread>\n      )}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { logout } from './../reducers/loginReducer'\nimport { Button } from './Style'\n\n\n\nconst Logout = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const handleLogout = () => {\n\n    try {\n      props.logout()\n      props.setNotification('See you soon!')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Logout failed!')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Logout</h3>\n      <Button onClick = {() => handleLogout()}>logout</Button>\n    </div>\n  )\n\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n\n  return async dispatch => {\n\n    await commentService.removeComment(data)\n\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteComment, editComment } from './../reducers/commentsReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Comment = (props) => {\n  const [editedMessage, setEditedMessage] = useState('')\n\n  let showButtons = false\n\n  const findCommentById = (id) => {\n    const comment = props.allComments.find(c => c.id === id)\n    return comment\n  }\n\n  const comment = findCommentById(props.id)\n  if (comment === undefined || comment === null) {\n    return ('')\n  }\n\n  // näkymä käyttäjälle, joka ei ole kirjautunut\n  if (props.user === null) {\n    // asetetaan käyttäjä, mikäli luoja on poistanut tilinsä\n    if (comment.user === null) {\n      comment.user = {\n        username: 'deleted account'\n      }\n    }\n\n    return (\n      <div>\n        <CommentInformation> Author:  {comment.user.username} Date: {comment.date} \n          <CommentText> {comment.message} </CommentText>\n        </CommentInformation>\n      </div>\n    )\n  }\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  const deleteComment = async (id) => {\n\n    try {\n      await props.deleteComment(id)\n      props.setNotification('Comment deleted')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to delete comment')\n    }\n  }\n\n\n  const editComment = async (id) => {\n    const newCommentObject = props.comments.find(c => c.id === id)\n    const changedComment = { ...newCommentObject, message: editedMessage }\n\n    try {\n      await props.editComment(changedComment)\n      props.setNotification('Comment edited')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to edit comment')\n    }\n  }\n\n  const editFunction = () => (\n    <div>\n      <form>\n        <div>\n          new message\n          <Input value={editedMessage}\n            onChange={handleEditedChange} />\n\n          <SmallButton onClick={() => editComment(comment.id, editedMessage)}> edit </SmallButton>\n        </div>\n      </form>\n      <SmallButton onClick={() => deleteComment(comment.id)}> delete comment </SmallButton>\n    </div>\n  )\n\n  // estetään tapaukset että kommentti on vasta hetki sitten luotu\n  // tai sen luoja on poistanut tilin\n  if (comment.user !== null && comment.user.username !== undefined && comment.user.username !== null) {\n    if (comment.user.username === props.user.username) {\n      showButtons = true\n    }\n  } else {\n    // käydään läpi ylläolevien tapauksien negaatiot\n    const createdUser = props.users.find(u => u.id === comment.user)\n    if (createdUser !== null && createdUser !== undefined) {\n      if (createdUser.username === props.user.username) {\n        showButtons = true\n      }\n    }\n  }\n\n  // asetetaan olio siinä tapauksessa, että kommentin käyttäjä on poistanut tilinsä\n  if (comment.user === null) {\n    comment.user = {\n      username: 'deleted account'\n    }\n  }\n\n  return (\n    <div>\n      <CommentInformation> Author:  {comment.user.username} Date: {comment.date}\n        <CommentText> {comment.message}\n          \n        </CommentText>\n        {showButtons && editFunction()}\n      </CommentInformation>\n\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\nimport { Input, Button, TextArea } from './Style'\n\nconst newCommentForm = (props) => {\n\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = (event) => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n    try {\n      await props.addComment(commentObject)\n      props.setNotification('New comment added')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to create new comment')\n    }\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <form>\n        <div>\n          <TextArea rows='3' cols=\"50\" value={commentMessage}\n            onChange={handleMessageChange} />\n        </div>\n        <Button onClick={() => addNewComment()}>add</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newCommentForm)","import React, { useState } from 'react'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { connect } from 'react-redux'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Redirect } from 'react-router-dom'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n\n    try {\n      await props.deleteThread(id)\n      props.setNotification('Thread deleted')\n      setChangeDone(true)\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to delete thread')\n    }\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n\n    try {\n      await props.editThread(changedThread)\n      props.setNotification('Thread edited')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to edit thread')\n    }\n  }\n\n  if (props.user === null) {\n\n    if (props.thread.user === null) {\n      props.thread.user = {\n        username: 'deleted account'\n      }\n    }\n    return (\n      <div>\n        <CommentInformation>\n          <h3>{props.thread.title}</h3>\n          Author: {props.thread.user.username}\n          <CommentText>{props.thread.message}</CommentText>\n        </CommentInformation>\n        {props.thread.comments.map(id =>\n          <Comment\n            key={id}\n            id={id}\n            allComments={props.comments} />\n        )}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <form>\n        <div>\n          new message\n          <Input value={editedMessage}\n            onChange={handleEditedChange} />\n          <SmallButton onClick={() => editThread(props.thread.id, editedMessage)}> edit </SmallButton>\n        </div>\n      </form>\n      <SmallButton onClick={() => deleteThread(props.thread.id)}> delete </SmallButton>\n    </div>\n  )\n\n  let showButtons = false\n\n  // älä muokkaa, menee kuitenkin pieleen !!\n\n  if (props.thread.user !== null && props.thread.user.username !== undefined) {\n    if (props.thread.user.username === props.user.username) {\n      showButtons = true\n    }\n  } else {\n    const createdUser = props.users.find(u => u.id === props.thread.user)\n    if (createdUser !== undefined && createdUser.username === props.user.username)\n      showButtons = true\n  }\n\n  if (props.thread.user === null) {\n    props.thread.user = {\n      username: 'deleted account'\n    }\n  }\n\n  return (\n    <div>\n      <CommentInformation>\n        <h3>{props.thread.title}</h3>\n        Author: {props.thread.user.username}\n        <CommentText>{props.thread.message}</CommentText>\n        {showButtons && buttonFunction()}\n      </CommentInformation>\n      {props.thread.comments.map(id =>\n        <Comment\n          key={id}\n          id={id}\n          allComments={props.comments} />)}\n\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import { connect } from 'react-redux'\nimport React from 'react'\nimport { logout } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { deleteUser } from './../reducers/usersReducer'\nimport { deleteThread } from './../reducers/threadReducer'\nimport { deleteComment } from './../reducers/commentsReducer'\nimport { Redirect } from 'react-router-dom'\nimport { Button } from './Style'\n\nconst DeleteAccount = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const deleteAccountFunction = async () => {\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    try {\n\n      await props.deleteUser(loggedUser.id)\n      props.setNotification('Account deleted!')\n      props.logout()\n\n    } catch (e) {\n      console.log('error:', e)\n      props.setNotification('Could not delete account!')\n    }\n  }\n\n  return (\n    <div>\n      Are you sure that you want to delete your account?\n      <div>\n        <Button onClick={() => deleteAccountFunction()}>Confirm</Button>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification,\n  deleteUser,\n  deleteThread,\n  deleteComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useEffect } from 'react'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Logout from './components/Logout'\nimport Thread from './components/Thread'\nimport DeleteAccount from './components/DeleteAccount'\nimport { Page, Navigation, Title } from './components/Style'\n\nimport './index.css'\nimport { connect } from 'react-redux'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser } from './reducers/loginReducer'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n  const findThreadIdById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n\n  const padding = { padding: 5 }\n\n\n  return (\n    <div>\n      <Page>\n        <Router>\n          <div>\n            <div>\n              <Title>\n                <h1>Campus24</h1>\n                <Navigation>\n                  <Link style={padding} to=\"/\">Threads</Link>\n                  {props.user === null &&\n                    <Link style={padding} to=\"/login\">Login</Link>}\n                  {props.user === null &&\n                    <Link style={padding} to=\"/create\">Create new user</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/logout\">Logout</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add a new thread</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/deleteAccount\">Delete account</Link>}\n                </Navigation>\n              </Title>\n              {props.notification !== null && <Notification />}\n            </div>\n            <Route exact path=\"/\" render={() => <AllThreads />} />\n            <Route exact path=\"/login\" render={() => <LoginForm />} />\n            <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n            <Route exact path=\"/logout\" render={() => <Logout />} />\n            <Route exact path=\"/deleteAccount\" render={() => <DeleteAccount />} />\n            <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n            <Route exact path=\"/threads/:id\" render={({ match }) =>\n              <Thread thread={findThreadIdById(match.params.id)} findUserIdByUsername={findUserIdByUsername} />}\n            />\n          </div>\n        </Router>\n      </Page>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}