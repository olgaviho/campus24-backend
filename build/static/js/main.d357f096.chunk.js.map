{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/NewThreadForm.js","services/login.js","services/comments.js","reducers/loginReducer.js","components/Login.js","services/users.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Logout.js","components/Comment.js","reducers/commentsReducer.js","components/NewCommentForm.js","components/Thread.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","threadReducer","toConsumableArray","index","findIndex","t","newState","filter","s","mapDispatchToProps","addThread","_ref2","_callee2","dispatch","newThread","_context2","threadService","_x2","connect","user","props","console","log","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","react_default","createElement","onSubmit","value","onChange","target","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","_context3","_x3","loginReducer","loginService","window","localStorage","setItem","JSON","stringify","commentService","react_router","to","setUsername","password","setPassword","handleLogin","name","services_users","t0","usersReducer","addUser","newUser","usersService","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","className","threads","comments","users","map","key","react_router_dom","logout","clear","onClick","Comment","comment","allComments","find","c","commentReducer","addComment","newComment","commentMessage","setCommentMessage","addNewComment","commentObject","threadId","deleteThread","_ref4","_callee4","_context4","_x4","editThread","editedThread","changeDone","setChangeDone","editedMessage","setEditedMessage","handleEditedChange","thread","newThreadObject","changedThread","objectSpread","components_Comment","showButtons","u","NewCommentForm","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","padding","style","components_Notification","exact","path","render","AllThreads","Login","components_NewUserForm","components_Logout","NewThreadForm","match","components_Thread","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.d357f096.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n  }\n  return null\n\n}\n\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null){\n\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_THREAD':\n    return [...state, action.data]\n  case 'INITIALIZE_THREADS':\n    return action.data\n  case 'EDIT_THREAD':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(t => t.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_THREAD':\n    // eslint-disable-next-line no-case-declarations\n    const newstate = state.filter(s => s.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\nexport default threadReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\n\nconst newThreadForm = (props) => {\n\n  console.log('props', props)\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n    console.log('threadobject', threadObject)\n\n    setNewTitle('')\n    setNewMessage('')\n    // ominaisuudet eivät ole heti näkyvissä\n    props.addThread(threadObject)\n    props.setNotification('New thread added')\n\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <input value={newTitle}\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <input value={newMessage}\n            onChange={handleMessageChange} />\n        </div>\n        <button type='submit'>add</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  \n\n  // try catch tähän, sitten saadaan virhe ulos ehkä?\n  const response = await axios.post(baseUrl, credentials)\n  console.log('response', response)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n// ei testattu\nconst update = async (updatedObject) => {\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  } return null\n}\n\n// ei testattu\nconst removeComment = async (id) => {\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n  } return null\n\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n    const user = await loginService.login(data)\n\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const user = {\n      username: username,\n      password: password\n    }\n\n    await props.login(user)\n    // entäs jos kirjautuminen epäonnistuu...\n    props.setNotification('Welcome!')\n\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <input type=\"text\" value={username} name='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <input type=\"password\" value={password} name='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <button type='submit'>login</button>\n        </div>\n      </form>\n    </div>\n  )\n\n\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  try {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n  }\n  catch (e) {\n    return null\n  }\n}\n\nexport default {\n  getAll,\n  create\n}","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    props.addUser(newUserObject)\n    props.setNotification('New user added!')\n    setNewName('')\n    setNewPassword('')\n    setNewUsername('')\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <input type='text' value={newUsername} name='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <input type='text' value={newName} name='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <input type='password' value={newPassword} name='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <button type='submit'>Add a new user</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div className='notification'>\n      {props.notification}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst allThreads = (props) => {\n\n  return (\n    <div>\n      <h2>Threads</h2>\n      {props.threads.map(t =>\n        <li key={t.id}>\n          <Link key={t.id} to={`/threads/${t.id}`}> {t.title} </Link>\n        </li>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { logout } from './../reducers/loginReducer'\n\n\n\nconst Logout = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const handleLogout = () => {\n    props.logout()\n    props.setNotification('See you soon!')\n  }\n\n  return (\n    <div>\n      <h3>Logout</h3>\n      <button onClick = {() => handleLogout()}>logout</button>\n    </div>\n  )\n\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import React from 'react'\n\nconst Comment = (props) => {\n\n  const findCommentById = (id) => {\n    const comment = props.allComments.find(c => c.id === id)\n    return comment\n  }\n  const comment = findCommentById(props.id)\n\n  if (comment !== undefined) {\n\n    return (\n      <div>\n        <p>Message: {comment.message}</p>\n        <p>Author: {comment.user.username} Date: {comment.date}</p>\n\n      </div>\n    )\n  } else {\n    return ('')\n  }\n}\n\nexport default Comment","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n  return async dispatch => {\n    await commentService.removeComment(data)\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\n\nconst newCommentForm = (props) => {\n\n\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = (event) => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n\n    props.addComment(commentObject)\n    props.setNotification('New comment added')\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <form>\n        <div>\n          message:\n          <input value={commentMessage}\n            onChange={handleMessageChange} />\n        </div>\n        <button onClick={() => addNewComment()}>add</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newCommentForm)","import React, { useState } from 'react'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { connect } from 'react-redux'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Redirect } from 'react-router-dom'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n    props.deleteThread(id)\n    props.setNotification('Thread deleted')\n    setChangeDone(true)\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n    props.editThread(changedThread)\n    props.setNotification('Thread edited')\n  }\n\n\n\n  if (props.user === null) {\n    return (\n      <div>\n        <h3>{props.thread.title}</h3>\n        <h4>Comments:</h4>\n        {props.thread.comments.map(id =>\n          <Comment\n            key={id}\n            id={id}\n            allComments={props.comments} />\n        )}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <form>\n        <div>\n          new message\n          <input value={editedMessage}\n            onChange={handleEditedChange} />\n        </div>\n        <button onClick={() => editThread(props.thread.id, editedMessage)}> edit </button>\n      </form>\n      <button onClick={() => deleteThread(props.thread.id)}> delete </button>\n    </div>\n  )\n\n\n\n  let showButtons = false\n\n\n  // älä muokkaa, menee kuitenkin pieleen !!\n  if (props.thread.user.username !== undefined) {\n    if (props.thread.user.username === props.user.username) {\n      showButtons = true\n    }\n  } else {\n    const createdUser = props.users.find(u => u.id === props.thread.user)\n    if (createdUser.username === props.user.username) {\n      showButtons = true\n    }\n  }\n\n\n  return (\n    <div>\n      <h3>{props.thread.title}</h3>\n      <h4>Message: {props.thread.message}</h4>\n      Author: {props.thread.user.username}\n\n      {showButtons && buttonFunction()}\n\n      <h4>Comments:</h4>\n      {props.thread.comments.map(id =>\n        <Comment\n          key={id}\n          id={id}\n          allComments={props.comments} />)}\n\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import React, { useEffect } from 'react'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Logout from './components/Logout'\nimport Thread from './components/Thread'\n\nimport './index.css'\nimport { connect } from 'react-redux'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser } from './reducers/loginReducer'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n  const findThreadIdById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n\n  const padding = { padding: 5 }\n\n\n  return (\n    <div>\n      <Router>\n        <div>\n          <div>\n            <Link style={padding} to=\"/\">Threads</Link>\n            {props.user === null &&\n              <Link style={padding} to=\"/login\">Login</Link>}\n            {props.user === null &&\n              <Link style={padding} to=\"/create\">Create new user</Link>}\n            {props.user !== null && <Link style={padding} to=\"/logout\">Logout</Link>}\n            {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add a new thread</Link>}\n            {props.notification !== null && <Notification />}\n          </div>\n          <Route exact path=\"/\" render={() => <AllThreads  />} />\n          <Route exact path=\"/login\" render={() => <LoginForm  />} />\n          <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n          <Route exact path=\"/logout\" render={() => <Logout />} />\n          <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n          <Route exact path=\"/threads/:id\" render={({ match }) =>\n            <Thread thread={findThreadIdById(match.params.id)} findUserIdByUsername={findUserIdByUsername} />}\n          />\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}