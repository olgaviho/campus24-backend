{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/Style.js","components/NewThreadForm.js","services/login.js","services/comments.js","services/users.js","reducers/loginReducer.js","components/Login.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Search.js","reducers/commentsReducer.js","components/Comment.js","components/NewCommentForm.js","components/Thread.js","components/User.js","components/DeleteAccount.js","components/EditPassword.js","components/Settings.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","getToken","deleteThread","_ref5","_callee5","dispatch","_context5","threadService","_x5","threadReducer","toConsumableArray","reverse","index","findIndex","t","newState","filter","s","newOrder","Button","styled","button","_templateObject","SmallButton","_templateObject2","Input","input","_templateObject3","TextArea","textarea","_templateObject4","Page","div","_templateObject5","Title","_templateObject6","Navigation","_templateObject7","HappyNotification","_templateObject8","OneThread","_templateObject9","CommentInformation","_templateObject10","CommentText","_templateObject11","DropdownMenuItem","_templateObject12","DropdownMenuButton","_templateObject13","LogoutButton","_templateObject14","ThreadInformation","_templateObject15","mapDispatchToProps","addThread","_ref2","_callee2","newThread","_context2","_x2","connect","user","props","react_default","createElement","react_router","to","history","useHistory","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","push","t0","onSubmit","value","onChange","target","cols","rows","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","commentId","_context3","console","log","_x3","services_users","removeUser","request","logout","window","localStorage","clear","commentService","usersService","loginReducer","loginService","setItem","JSON","stringify","setUsername","password","setPassword","handleLogin","name","usersReducer","u","addUser","newUser","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","threads","comments","users","clickState","setClickState","active","items","numberOfItems","numberOfpages","Math","ceil","_loop","number","Pagination_default","Item","onClick","key","paginationBasic","size","slice","map","react_router_dom","thread","c","findUserNameById","searchWord","setSearchWord","threadIds","includes","commentsWithRealThread","toLowerCase","findThreadById","deleteComment","_ref4","_callee4","_context4","_x4","commentReducer","editComment","editedComment","editedMessage","setEditedMessage","showButtons","comment","handleEditedChange","newCommentObject","changedComment","find","objectSpread","addComment","newComment","changeOrder","commentMessage","setCommentMessage","addNewComment","commentObject","getThread","threadId","editThread","editedThread","changeDone","setChangeDone","newThreadObject","changedThread","threadComments","numberOfPages","className","components_Comment","NewCommentForm","us","deleteUser","deleteAccountFunction","loggedUser","EditPasswordFunction","userService","components_EditPassword","components_DeleteAccount","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","findUserById","padding","hidden","setHidden","style","lib","dropdownToggle","toggle","e","handleLogout","components_Notification","exact","path","render","AllThreads","Login","components_Search","components_NewUserForm","components_Settings","NewThreadForm","match","components_Thread","params","components_User","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.8cba8811.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n\n}\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken,\n  getToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_THREAD':\n    return [action.data,...state]\n  case 'INITIALIZE_THREADS':\n    const orderThreads = action.data.reverse()\n    return orderThreads\n  case 'EDIT_THREAD':\n    const index = state.findIndex(t => t.id === action.data.id)\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_THREAD':\n    const newstate = state.filter(s => s.id !== action.data)\n    return newstate\n  case 'CHANGE_ORDER':\n    const newOrder = state.filter(s => s.id !== action.data.id)\n    return [action.data,...newOrder]\n  default:\n    return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const changeOrder = (thread) => {\n  return async dispatch => {\n    dispatch({\n      type: 'CHANGE_ORDER',\n      data: thread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\n\nexport default threadReducer","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: silver;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  `\n\nconst SmallButton = styled.button`\n  background: silver;\n  font-size: 0.75em;\n  margin: 0.25em;\n  padding: 0.1em 0.3em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\n\nconst Input = styled.input`\n  margin: 0.25em;\n  `\nconst TextArea = styled.textarea`\n  margin: 0.25em;\n  `\nconst Page = styled.div`\n  padding: 1em;\n  background: mintcream;\n  `\nconst Title = styled.div`\n  background: steelblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  margin: 1em;\n  color: white;\n  `\n\nconst Navigation = styled.div`\n  background: skyblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\nconst HappyNotification = styled.div`\n  margin: 1em;\n  padding: 0.5em 1.3em;\n  border: 2px solid black;\n  border-radius: 2px;\n  background: white;\n  `\n\n\nconst OneThread = styled.div`\n  margin: 0.3em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n  width: 50%\n`\n\nconst CommentInformation = styled.div`\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n  font-size: 0.75em;\n  width: 50%\n  `\nconst CommentText = styled.div`\n\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: white;\n  font-size: 1.2em;\n  `\n\nconst DropdownMenuItem = styled.div`\n  float: right;\n  `\n\nconst DropdownMenuButton = styled.div`\n  float: right;\n  background: silver;\n  font-size: 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  padding: 0.1em 1em;\n  `\n\nconst LogoutButton = styled.div`\n  background: white;\n  font-size: 1em;\n  border: 1px solid white;\n  `\n\nconst ThreadInformation = styled.div`\n  font-size: 0.75em;\n  `\n\nexport { ThreadInformation, LogoutButton, DropdownMenuItem, DropdownMenuButton, TextArea, Title, CommentInformation, CommentText, Button, Input, Page, Navigation, HappyNotification, OneThread, SmallButton }","import React, { useState } from 'react'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\nimport { Input, TextArea, Button } from './Style'\n\nconst newThreadForm = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  let history = useHistory()\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n    if (threadObject.title.length < 3) {\n      props.setNotification('Title must be at least three letters long')\n    } else if (threadObject.title.length > 100) {\n      props.setNotification('Title must be shorter than 100 letters')\n    } else if (threadObject.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (threadObject.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.addThread(threadObject)\n        props.setNotification('New thread added')\n        setNewTitle('')\n        setNewMessage('')\n        history.push(\"/\")\n      } catch (e) {\n        props.setNotification('Failed to create new comment')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <Input value={newTitle} id='NewTitle'\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <div>\n            <TextArea cols='50' rows='3' value={newMessage} id='NewMessage'\n              onChange={handleMessageChange} />\n          </div>\n        </div>\n        <Button type='submit'>add</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n\nconst update = async (updatedObject) => {\n\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  }\n\n  return null\n}\n\nconst removeComment = async (commentId) => {\n\n  console.log('token', token)\n\n\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${commentId}`, config)\n\n    return response.data\n  }\n  return null\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment,\n  getToken\n}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n\n}\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeUser = async (userId) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.delete(`${baseUrl}/${userId}`, config)\n\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  update,\n  getAll,\n  create,\n  removeUser,\n  removeToken,\n  setToken,\n  getToken\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\nimport usersService from './../services/users'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    usersService.setToken(data.token)\n\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n\n    const user = await loginService.login(data)\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n\n    threadService.setToken(user.token)\n    commentService.setToken(user.token)\n    usersService.setToken(user.token)\n  \n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n    usersService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Button, Input } from './Style'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = {\n      username: username,\n      password: password\n    }\n    try {\n      await props.login(user)\n      props.setNotification(`Welcome ${user.username}!`)\n    } catch (e) {\n      props.setNotification('Wrong username or password!')\n    }\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <Input type=\"text\" value={username} name='Username' id='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <Input type=\"password\" value={password} name='Password' id='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <Button type='submit'>login</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  case 'DELETE_USER':\n    // eslint-disable-next-line no-case-declarations\n    const newstate = state.filter(u => u.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n\n  return async dispatch => {\n    await usersService.removeUser(id)\n    dispatch({\n      type: 'DELETE_USER',\n      data: id\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Input, Button } from './Style'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  let history = useHistory()\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    if (newUserObject.username.length < 3) {\n      props.setNotification('Username must be at least three letters long')\n    } else if (newUserObject.name.length < 3) {\n      props.setNotification('Name must be at least three letters long')\n    } else if (newUserObject.password.length < 5) {\n      props.setNotification('Password must be at least five letters long')\n    } else if (newUserObject.username.length > 15) {\n      props.setNotification('Username must be shorter than 16 letters')\n    } else if (newUserObject.name.length > 15) {\n      props.setNotification('Name must be shorter than 16 letters')\n    } else if (newUserObject.password.length > 30) {\n      props.setNotification('Password must be shorter than 31 letters')\n\n    } else {\n      try {\n        await props.addUser(newUserObject)\n        props.setNotification('New user added!')\n        setNewName('')\n        setNewPassword('')\n        setNewUsername('')\n        history.push(\"/login\")\n      } catch (e) {\n        props.setNotification('Username must be unique')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <Input type='text' value={newUsername} name='newUsername' id='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <Input type='text' value={newName} name='newName' id='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <Input type='password' value={newPassword} name='newPassword' id='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <Button type='submit'>Add a new user</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { HappyNotification } from './Style'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div>\n      <HappyNotification>\n        {props.notification}\n      </HappyNotification>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OneThread, ThreadInformation, CommentText } from './Style'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst allThreads = (props) => {\n  const [clickState, setClickState] = useState(1)\n\n  const countComments = (thread) => {\n\n    const commentsOfThread = props.comments.filter(c => c.thread === thread.id)\n    return commentsOfThread.length\n  }\n\n\n  let active = clickState\n  let items = []\n  const numberOfItems = props.threads.length\n  const itemsPerPage = 5\n  const numberOfpages = Math.ceil(numberOfItems / itemsPerPage)\n\n  for (let number = 1; number <= numberOfpages; number++) {\n    items.push(\n      <Pagination.Item onClick={() => {\n        setClickState(number)\n      }}\n      key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    )\n  }\n\n  const paginationBasic = (\n    <div>\n      <Pagination size=\"sm\">{items}</Pagination>\n    </div>\n  )\n\n\n  return (\n    <div>\n      {props.threads.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(t =>\n        <OneThread key={t.id}>\n          <CommentText>\n            <Link key={t.id} to={`/thread/${t.id}`}> {t.title} </Link>\n          </CommentText>\n          <ThreadInformation>\n            &nbsp;&nbsp; comments {countComments(t)}\n            &nbsp;&nbsp; started by: <Link key={t.user} to={`/user/${t.user}`}> {props.findUserNameById(t.user)} </Link>\n          </ThreadInformation>\n        </OneThread>\n      )}\n      {paginationBasic}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Input, CommentInformation, CommentText } from './Style'\n\n\nconst Search = (props) => {\n\n  const [searchWord, setSearchWord] = useState('')\n\n  const handleSearchWordChange = (event) => {\n    setSearchWord(event.target.value)\n  }\n\n  const commentsWithRealThread = () => {\n    const threadIds = props.threads.map(t => t.id)\n    if (threadIds.length === 0) {\n      return []\n    } else {\n      return props.comments.filter(c => {\n        return (threadIds.includes(c.thread))\n\n      })\n    }\n  }\n\n  const commentsToShow = () => {\n    let commentWithThread = []\n    commentWithThread = commentsWithRealThread()\n\n    return commentWithThread.filter(c => {\n      if (searchWord.length) {\n        return c.message.toLowerCase().includes(searchWord.toLowerCase())\n      }\n      return false\n    })\n  }\n\n\n  return (\n    <div>\n      Search for\n      <Input value={searchWord} id='searchWord'\n        onChange={handleSearchWordChange} />\n      {commentsToShow().map(c =>\n\n        <CommentInformation key={c.id} > Author: {props.findUserNameById(c.user)} Date: {c.date}\n          <CommentText> {c.message} </CommentText>\n          Thread: <Link key={c.thread} to={`/thread/${c.thread}`}> {props.findThreadById(c.thread).title} </Link>\n        </CommentInformation>\n\n      )}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(Search)","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n\n  return async dispatch => {\n\n    await commentService.removeComment(data)\n\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { deleteComment, editComment } from './../reducers/commentsReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Comment = (props) => {\n  const [editedMessage, setEditedMessage] = useState('')\n\n  let showButtons = false\n\n  if (props.comment === undefined || props.comment === null) {\n    return ('')\n  }\n\n  if (props.user === null) {\n\n    return (\n      <div>\n        <CommentInformation> Author: <Link  to={`/user/${props.comment.user}`}> {props.findUserNameById(props.comment.user)} </Link> Date: {props.comment.date}\n          <CommentText> {props.comment.message} </CommentText>\n        </CommentInformation>\n      </div>\n    )\n  }\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  const deleteComment = async (id) => {\n\n    try {\n      await props.deleteComment(id)\n      props.setNotification('Comment deleted')\n    } catch (e) {\n      props.setNotification('Failed to delete comment')\n    }\n  }\n\n\n  const editComment = async (id) => {\n    const newCommentObject = props.comments.find(c => c.id === id)\n    const changedComment = { ...newCommentObject, message: editedMessage }\n\n    if (changedComment.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (changedComment.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.editComment(changedComment)\n        props.setNotification('Comment edited')\n        setEditedMessage('')\n\n      } catch (e) {\n        console.log(e)\n        props.setNotification('Failed to edit comment')\n      }\n    }\n  }\n\n  const editFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editComment'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editComment(props.comment.id, editedMessage)}> edit comment </SmallButton>\n      </div>\n      <SmallButton id='deleteComment' onClick={() => deleteComment(props.comment.id)}> delete comment </SmallButton>\n    </div>\n  )\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.comment.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div>\n      <CommentInformation> Author:  <Link  to={`/user/${props.comment.user}`}> {props.findUserNameById(props.comment.user)} </Link> Date: {props.comment.date}\n        <CommentText> {props.comment.message}\n\n        </CommentText>\n        {showButtons && editFunction()}\n      </CommentInformation>\n\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\nimport { changeOrder } from './../reducers/threadReducer'\nimport { Button, TextArea } from './Style'\n\nconst newCommentForm = props => {\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = event => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n\n    if (commentObject.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (commentObject.message.length > 2000) {\n      props.setNotification('Message must be shoter than 2000 letters')\n    } else {\n      try {\n        await props.addComment(commentObject)\n        const getThread = props.threads.filter(t => t.id === props.threadId)\n        await props.changeOrder(getThread[0])\n        props.setNotification('New comment added')\n        setCommentMessage('')\n      } catch (e) {\n        props.setNotification('Failed to create new comment')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <div>\n        <TextArea\n          rows=\"3\"\n          cols=\"50\"\n          value={commentMessage}\n          id=\"newComment\"\n          onChange={handleMessageChange}\n        />\n      </div>\n      <Button onClick={() => addNewComment()}>add</Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment,\n  changeOrder\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(newCommentForm)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Link } from 'react-router-dom'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n  const [clickState, setClickState] = useState(1)\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n\n    try {\n      await props.deleteThread(id)\n      props.setNotification('Thread deleted')\n      setChangeDone(true)\n    } catch (e) {\n      props.setNotification('Failed to delete thread')\n    }\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n    if (changedThread.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (changedThread.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.editThread(changedThread)\n        props.setNotification('Thread edited')\n        setEditedMessage('')\n\n      } catch (e) {\n        props.setNotification('Failed to edit thread')\n        setEditedMessage('')\n      }\n    }\n  }\n\n  const findComments = () => {\n    const threadComments = props.comments.filter(c => c.thread === props.thread.id)\n    return threadComments\n  }\n\n  const threadComments = findComments()\n  let active = clickState\n  let items = []\n  const numberOfItems = threadComments.length\n  const itemsPerPage = 5\n  const numberOfPages = Math.ceil(numberOfItems / itemsPerPage)\n\n  for (let number = 1; number <= numberOfPages; number++) {\n    items.push(\n      <Pagination.Item onClick={() => {\n        setClickState(number)\n      }} key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    )\n  }\n\n  const paginationBasic = (\n    <div>\n      <Pagination size='sm'> {items} </Pagination>\n    </div>\n  )\n\n  if (props.user === null) {\n\n    return (\n      <div className='thread'>\n        <CommentInformation>\n          <h3>{props.thread.title}</h3>\n          Author: <Link  to={`/user/${props.thread.user}`}> {props.findUserNameById(props.thread.user)} </Link>\n          <CommentText>{props.thread.message}</CommentText>\n        </CommentInformation>\n        Comments\n        {threadComments.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(c =>\n          <Comment key={c.id} comment={c} findUserNameById={props.findUserNameById} />)}\n        {paginationBasic}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editMessage'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editThread(props.thread.id, editedMessage)}> edit </SmallButton>\n      </div>\n      <SmallButton id='deleteThread' onClick={() => deleteThread(props.thread.id)}> delete </SmallButton>\n    </div>\n  )\n\n  let showButtons = false\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n  }\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.thread.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div className='thread'>\n      <CommentInformation>\n        <h3>{props.thread.title}</h3>\n        Author: <Link  to={`/user/${props.thread.user}`}> {props.findUserNameById(props.thread.user)} </Link>\n        <CommentText>{props.thread.message}</CommentText>\n        {showButtons && buttonFunction()}\n      </CommentInformation>\n      Comments\n      {threadComments.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(c =>\n        <Comment comment={c} key={c.id} findUserNameById={props.findUserNameById} />)}\n      {paginationBasic}\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nconst User = (props) => {\n\n\n  if (props.us === undefined || props.us === null) {\n    return (\n      null\n    )\n  } else if (props.us === 'unknown user') {\n    return (\n      <div>This user has been deleted :( </div>\n    )\n  }\n\n  return (\n    <div>\n      <h3> User: {props.us.username}</h3>\n      <p>Number of threads started: {props.threads.filter(t => t.user === props.us.id).length}</p>\n      <p>Number of comments written: {props.comments.filter(c => c.user === props.us.id).length}</p>\n\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(User)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { logout } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { deleteUser } from './../reducers/usersReducer'\nimport { deleteThread } from './../reducers/threadReducer'\nimport { deleteComment } from './../reducers/commentsReducer'\nimport { Button } from './Style'\n\nconst DeleteAccount = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const deleteAccountFunction = async () => {\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    try {\n\n      await props.deleteUser(loggedUser.id)\n      props.setNotification('Account deleted!')\n      props.logout()\n\n    } catch (e) {\n      props.setNotification('Could not delete account!')\n    }\n  }\n\n  return (\n    <div>\n      <Button id='deleteAccount' name='deleteAccount' onClick={() => deleteAccountFunction()}>Delete </Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification,\n  deleteUser,\n  deleteThread,\n  deleteComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Button, Input } from './Style'\nimport { setNotification } from './../reducers/notificationReducer'\nimport userService from './../services/users'\n\nconst EditPassword = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const EditPasswordFunction = async () => {\n\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    const newUser = {\n      password: newPassword,\n      username: loggedUser.username,\n      name: loggedUser.name,\n      id: loggedUser.id\n    }\n\n\n    if (newUser.password.length < 3) {\n      props.setNotification('Password must be at least three letters long')\n    } else if (newUser.password.length > 20) {\n      props.setNotification('Password must be shorter than 20 letters')\n    } else {\n      try {\n        await userService.update(newUser)\n        props.setNotification('Password edited')\n        setNewPassword('')\n\n      } catch (e) {\n        console.log(e)\n        props.setNotification('Failed to edit password')\n      }\n    }\n  }\n\n  return (\n    <div>\n      new password\n      <Input value={newPassword} id='changePassword' name='changePassword'\n        onChange={handleNewPasswordChange} />\n      <Button onClick={() => EditPasswordFunction()}>Edit</Button>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n}\n\nconst mapDispatchToProps = {\n  setNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPassword)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport DeleteAccount from './DeleteAccount'\nimport EditPassword from './EditPassword'\n\n\nconst Settings = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n\n  return (\n    <div>\n      <h3>Settings</h3>\n\n      <h5>Change password</h5>\n      <EditPassword/>\n      <h5>Delete Account</h5>\n      <DeleteAccount/>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Search from './components/Search'\nimport Thread from './components/Thread'\nimport User from './components/User'\nimport Settings from './components/Settings'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser, logout } from './reducers/loginReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { Dropdown, DropdownItem, DropdownMenu } from 'styled-dropdown-component'\nimport { Page, Navigation, Title, DropdownMenuItem, DropdownMenuButton, LogoutButton } from './components/Style'\nimport './index.css'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n  }\n\n  const findUserNameById = (id) => {\n\n    const us = props.users.find(u => u.id === id)\n    if (us === null || us === undefined) {\n      return 'unknown user'\n    }\n    return us.username\n  }\n\n  const findUserById = (id) => {\n\n    const us = props.users.find(u => u.id === id)\n    if (us === null || us === undefined) {\n      return 'unknown user'\n    }\n    return us\n  }\n\n  const findThreadById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n  const handleLogout = () => {\n\n    try {\n      props.logout()\n      props.setNotification('See you soon!')\n    } catch (e) {\n      props.setNotification('Logout failed!')\n    }\n  }\n\n\n  const padding = { padding: 5 }\n  const [hidden, setHidden] = useState(true)\n\n\n  return (\n    <div>\n      <Page>\n        <Router>\n          <div>\n            <div>\n              <Title>\n                <h1>Campus24</h1>\n                <Navigation>\n                  <Link style={padding} to=\"/\">Threads</Link>\n\n                  <Link style={padding} to=\"/search\">Search</Link>\n\n                  {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add new thread</Link>}\n\n                  <DropdownMenuItem>\n                    <Dropdown>\n                      <DropdownMenuButton dropdownToggle onClick={() => setHidden(!hidden)} id = 'dropdown' name= 'dropdown'>\n                        Menu\n                      </DropdownMenuButton>\n                      <DropdownMenu hidden={hidden} toggle={() => setHidden(!hidden)}>\n                        {props.user !== null && <LogoutButton onClick = {() => handleLogout()}> <DropdownItem id='logoutItem' name='logoutItem'>Logout</DropdownItem> </LogoutButton>}\n                        {props.user !== null && <Link to=\"/settings\" ><DropdownItem id='settingsItem' name='settingItem'>Settings</DropdownItem></Link>}\n                        {props.user === null && <Link to=\"/login\"><DropdownItem id='loginItem' name='loginItem'>Login</DropdownItem></Link>}\n                        {props.user === null && <Link to=\"/create\" ><DropdownItem id='createUserItem' name='createUserItem'>Create User</DropdownItem></Link>}\n                      </DropdownMenu>\n                    </Dropdown>\n                  </DropdownMenuItem>\n\n                </Navigation>\n              </Title>\n              {props.notification !== null && <Notification />}\n            </div>\n            <Route exact path=\"/\" render={() => <AllThreads findUserNameById={findUserNameById} />} />\n            <Route exact path=\"/login\" render={() => <LoginForm />} />\n            <Route exact path=\"/search\" render={() => <Search findUserNameById={findUserNameById} findThreadById={findThreadById} />} />\n            <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n            <Route exact path=\"/settings\" render={() => <Settings />} />\n            <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n            <Route exact path=\"/thread/:id\" render={({ match }) =>\n              <Thread thread={findThreadById(match.params.id)}\n                findUserIdByUsername={findUserIdByUsername} findUserNameById={findUserNameById} />}\n            />\n            <Route exact path=\"/user/:id\" render={({ match }) =>\n              <User us={findUserById(match.params.id)} />}\n            />\n          </div>\n        </Router>\n      </Page>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser,\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './index.css'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}