{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/NewThreadForm.js","services/login.js","services/comments.js","services/users.js","reducers/loginReducer.js","components/Login.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Logout.js","reducers/commentsReducer.js","components/Comment.js","components/NewCommentForm.js","components/Thread.js","components/DeleteAccount.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","getToken","deleteThread","_ref4","_callee4","dispatch","_context4","threadService","_x4","threadReducer","toConsumableArray","index","findIndex","t","newState","filter","s","mapDispatchToProps","addThread","token1","console","log","_ref2","_callee2","newThread","_context2","_x2","connect","user","props","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","t0","react_default","createElement","onSubmit","value","onChange","target","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","_context3","_x3","services_users","removeUser","request","logout","window","localStorage","clear","commentService","usersService","loginReducer","token2","token3","loginService","setItem","JSON","stringify","react_router","to","setUsername","password","setPassword","handleLogin","name","usersReducer","u","addUser","newUser","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","className","threads","comments","users","map","key","react_router_dom","onClick","e","handleLogout","deleteComment","commentReducer","c","editComment","editedComment","editedMessage","setEditedMessage","showButtons","comment","allComments","find","handleEditedChange","newCommentObject","changedComment","objectSpread","createdUser","addComment","newComment","commentMessage","setCommentMessage","addNewComment","commentObject","threadId","editThread","editedThread","changeDone","setChangeDone","thread","newThreadObject","changedThread","components_Comment","NewCommentForm","deleteUser","deleteAccountFunction","loggedUser","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","padding","style","components_Notification","exact","path","render","AllThreads","Login","components_NewUserForm","components_Logout","components_DeleteAccount","NewThreadForm","match","components_Thread","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.9207f4e7.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n  }\n  return null\n\n}\n\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null){\n\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken,\n  getToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_THREAD':\n      return [...state, action.data]\n    case 'INITIALIZE_THREADS':\n      return action.data\n    case 'EDIT_THREAD':\n      // eslint-disable-next-line no-case-declarations\n      const index = state.findIndex(t => t.id === action.data.id)\n      // eslint-disable-next-line no-case-declarations\n      const newState = [...state]\n      newState[index] = action.data\n      return newState\n    case 'DELETE_THREAD':\n      // eslint-disable-next-line no-case-declarations\n      const newstate = state.filter(s => s.id !== action.data)\n      return newstate\n    default:\n      return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n\n  const token1 = threadService.getToken()\n\n  console.log('thread token', token1)\n\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n  const token1 = threadService.getToken()\n\n  console.log('thread token', token1)\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\n\nexport default threadReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\n\nconst newThreadForm = (props) => {\n\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n\n    setNewTitle('')\n    setNewMessage('')\n\n\n    try {\n      await props.addThread(threadObject)\n      props.setNotification('New thread added')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to create new comment')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <input value={newTitle}\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <input value={newMessage}\n            onChange={handleMessageChange} />\n        </div>\n        <button type='submit'>add</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  \n\n  // try catch tähän, sitten saadaan virhe ulos ehkä?\n  const response = await axios.post(baseUrl, credentials)\n  console.log('response', response)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n      \n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n\nconst update = async (updatedObject) => {\n\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  }\n\n  return null\n}\n\nconst removeComment = async (id) => {\n\n\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n \n    return response.data\n  }\n  return null\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment,\n  getToken\n}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n\n}\n\nconst removeUser = async (id) => {\n\n  console.log('id', id)\n\n  console.log('token', token)\n\n  if (token !== null) {\n    console.log('token', token)\n\n    const config = {\n      headers: { Authorization: token },\n    }\n    console.log('config', config)\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    console.log('request', request)\n    return request.then(response => response.data)\n  }\n  console.log('failed')\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  removeUser,\n  removeToken,\n  setToken,\n  getToken\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\nimport usersService from './../services/users'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    usersService.setToken(data.token)\n\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n\n    const user = await loginService.login(data)\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n    console.log('user', user)\n\n    threadService.setToken(user.token)\n    commentService.setToken(user.token)\n    usersService.setToken(user.token)\n\n    const token1 = threadService.getToken()\n    const token2 = usersService.getToken()\n    const token3 = commentService.getToken()\n\n    console.log('thread token', token1)\n    console.log('userstoken', token2)\n    console.log('commenttoken', token3)\n   \n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n    usersService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const user = {\n      username: username,\n      password: password\n    }\n    try {\n      await props.login(user)\n      props.setNotification('Welcome!')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Wrong username or password!')\n    }\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <input type=\"text\" value={username} name='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <input type=\"password\" value={password} name='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <button type='submit'>login</button>\n        </div>\n      </form>\n    </div>\n  )\n\n\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  case 'DELETE_USER':\n    // eslint-disable-next-line no-case-declarations\n    console.log('action.data', action.data)\n    const newstate = state.filter(u => u.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n\n  const token1 = usersService.getToken()\n\n  console.log('users token', token1)\n  console.log('id', id)\n  return async dispatch => {\n    await usersService.removeUser(id)\n    dispatch({\n      type: 'DELETE_USER',\n      data: id\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    setNewName('')\n    setNewPassword('')\n    setNewUsername('')\n\n    try {\n      await props.addUser(newUserObject)\n      props.setNotification('New user added!')\n    } catch (e) {\n      props.setNotification('Username must be unique')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <input type='text' value={newUsername} name='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <input type='text' value={newName} name='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <input type='password' value={newPassword} name='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <button type='submit'>Add a new user</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div className='notification'>\n      {props.notification}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst allThreads = (props) => {\n\n  return (\n    <div>\n      <h2>Threads</h2>\n      {props.threads.map(t =>\n        <li key={t.id}>\n          <Link key={t.id} to={`/threads/${t.id}`}> {t.title} </Link>\n        </li>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { logout } from './../reducers/loginReducer'\n\n\n\nconst Logout = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const handleLogout = () => {\n\n    try {\n      props.logout()\n      props.setNotification('See you soon!')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Logout failed!')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Logout</h3>\n      <button onClick = {() => handleLogout()}>logout</button>\n    </div>\n  )\n\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n\n  return async dispatch => {\n\n    await commentService.removeComment(data)\n\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteComment, editComment } from './../reducers/commentsReducer'\nimport { setNotification } from './../reducers/notificationReducer'\n\nconst Comment = (props) => {\n  const [editedMessage, setEditedMessage] = useState('')\n\n  let showButtons = false\n\n  const findCommentById = (id) => {\n    const comment = props.allComments.find(c => c.id === id)\n    return comment\n  }\n\n  const comment = findCommentById(props.id)\n  if (comment === undefined || comment === null) {\n    return ('')\n  }\n\n  // näkymä käyttäjälle, joka ei ole kirjautunut\n  if (props.user === null) {\n    // asetetaan käyttäjä, mikäli luoja on poistanut tilinsä\n    if (comment.user === null) {\n      comment.user = {\n        username: 'deleted account'\n      }\n    }\n\n    return (\n      <div>\n        <p>Message: {comment.message}</p>\n        <p>Author:  {comment.user.username} Date: {comment.date}</p>\n      </div>\n    )\n  }\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  const deleteComment = async (id) => {\n\n    try {\n      await props.deleteComment(id)\n      props.setNotification('Comment deleted')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to delete comment')\n    }\n  }\n\n\n  const editComment = async (id) => {\n    const newCommentObject = props.comments.find(c => c.id === id)\n    const changedComment = { ...newCommentObject, message: editedMessage }\n\n    try {\n      await props.editComment(changedComment)\n      props.setNotification('Comment edited')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to edit comment')\n    }\n  }\n\n  const editFunction = () => (\n    <div>\n      <form>\n        <div>\n          new message\n          <input value={editedMessage}\n            onChange={handleEditedChange} />\n        </div>\n        <button onClick={() => editComment(comment.id, editedMessage)}> edit </button>\n      </form>\n      <button onClick={() => deleteComment(comment.id)}> delete </button>\n    </div>\n  )\n\n  // estetään tapaukset että kommentti on vasta hetki sitten luotu\n  // tai sen luoja on poistanut tilin\n  if (comment.user !== null && comment.user.username !== undefined && comment.user.username !== null) {\n    if (comment.user.username === props.user.username) {\n      showButtons = true\n    }\n  } else {\n  // käydään läpi ylläolevien tapauksien negaatiot\n    const createdUser = props.users.find(u => u.id === comment.user)\n    if (createdUser !== null && createdUser !== undefined) {\n      if (createdUser.username === props.user.username) {\n        showButtons = true\n      }\n    }\n  }\n\n  // asetetaan olio siinä tapauksessa, että kommentin käyttäjä on poistanut tilinsä\n  if (comment.user === null) {\n    comment.user = {\n      username: 'deleted account'\n    }\n  }\n\n  return (\n    <div>\n      <p>Message: {comment.message}</p>\n      <p>Author:  {comment.user.username} Date: {comment.date}</p>\n\n      {showButtons && editFunction()}\n\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\n\nconst newCommentForm = (props) => {\n\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = (event) => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n    try {\n      await props.addComment(commentObject)\n      props.setNotification('New comment added')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to create new comment')\n    }\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <form>\n        <div>\n          message:\n          <input value={commentMessage}\n            onChange={handleMessageChange} />\n        </div>\n        <button onClick={() => addNewComment()}>add</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newCommentForm)","import React, { useState } from 'react'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { connect } from 'react-redux'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Redirect } from 'react-router-dom'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n\n    try {\n      await props.deleteThread(id)\n      props.setNotification('Thread deleted')\n      setChangeDone(true)\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to delete thread')\n    }\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n\n    try {\n      await props.editThread(changedThread)\n      props.setNotification('Thread edited')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to edit thread')\n    }\n  }\n\n  if (props.user === null) {\n    return (\n      <div>\n        <h3>{props.thread.title}</h3>\n        <h4>Comments:</h4>\n        {props.thread.comments.map(id =>\n          <Comment\n            key={id}\n            id={id}\n            allComments={props.comments} />\n        )}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <form>\n        <div>\n          new message\n          <input value={editedMessage}\n            onChange={handleEditedChange} />\n        </div>\n        <button onClick={() => editThread(props.thread.id, editedMessage)}> edit </button>\n      </form>\n      <button onClick={() => deleteThread(props.thread.id)}> delete </button>\n    </div>\n  )\n\n  let showButtons = false\n\n  // älä muokkaa, menee kuitenkin pieleen !!\n\n  if (props.thread.user !== null && props.thread.user.username !== undefined) {\n    if (props.thread.user.username === props.user.username) {\n      showButtons = true\n    }\n  } else {\n    const createdUser = props.users.find(u => u.id === props.thread.user)\n    if (createdUser !== undefined && createdUser.username === props.user.username)\n      showButtons = true\n  }\n\n  if (props.thread.user === null) {\n    props.thread.user = {\n      username: 'deleted account'\n    }\n  }\n\n  return (\n    <div>\n      <h3>{props.thread.title}</h3>\n      <h4>Message: {props.thread.message}</h4>\n      Author: {props.thread.user.username}\n      {showButtons && buttonFunction()}\n\n      <h4>Comments:</h4>\n      {props.thread.comments.map(id =>\n        <Comment\n          key={id}\n          id={id}\n          allComments={props.comments} />)}\n\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import { connect } from 'react-redux'\nimport React from 'react'\nimport { logout } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { deleteUser } from './../reducers/usersReducer'\nimport { deleteThread } from './../reducers/threadReducer'\nimport { deleteComment } from './../reducers/commentsReducer'\nimport { Redirect } from 'react-router-dom'\n\nconst DeleteAccount = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const deleteAccountFunction = async () => {\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    try {\n\n      await props.deleteUser(loggedUser.id)\n      props.setNotification('Account deleted!')\n      props.logout()\n\n    } catch (e) {\n      console.log('error:', e)\n      props.setNotification('Could not delete account!')\n    }\n  }\n\n  return (\n    <div>\n      Are you sure that you want to delete your account?\n      <div>\n        <button onClick={() => deleteAccountFunction()}>Confirm</button>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification,\n  deleteUser,\n  deleteThread,\n  deleteComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useEffect } from 'react'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Logout from './components/Logout'\nimport Thread from './components/Thread'\nimport DeleteAccount from './components/DeleteAccount'\n\nimport './index.css'\nimport { connect } from 'react-redux'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser } from './reducers/loginReducer'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n    \n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n  const findThreadIdById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n\n  const padding = { padding: 5 }\n\n\n  return (\n    <div>\n      <Router>\n        <div>\n          <div>\n            <Link style={padding} to=\"/\">Threads</Link>\n            {props.user === null &&\n              <Link style={padding} to=\"/login\">Login</Link>}\n            {props.user === null &&\n              <Link style={padding} to=\"/create\">Create new user</Link>}\n            {props.user !== null && <Link style={padding} to=\"/logout\">Logout</Link>}\n            {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add a new thread</Link>}\n            {props.user !== null && <Link style={padding} to=\"/deleteAccount\">Delete account</Link>}\n            {props.notification !== null && <Notification />}\n          </div>\n          <Route exact path=\"/\" render={() => <AllThreads  />} />\n          <Route exact path=\"/login\" render={() => <LoginForm  />} />\n          <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n          <Route exact path=\"/logout\" render={() => <Logout />} />\n          <Route exact path=\"/deleteAccount\" render={() => <DeleteAccount />} />\n          <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n          <Route exact path=\"/threads/:id\" render={({ match }) =>\n            <Thread thread={findThreadIdById(match.params.id)} findUserIdByUsername={findUserIdByUsername} />}\n          />\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}