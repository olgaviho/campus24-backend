{"version":3,"sources":["components/Thread.js","components/NewThreadFrom.js","services/threads.js","services/login.js","services/users.js","components/Login.js","App.js","index.js"],"names":["Thread","props","_useState","useState","_useState2","Object","slicedToArray","editedMessage","setEditedMessage","react_default","a","createElement","onClick","deleteThread","id","title","message","value","onChange","event","target","editThread","newThreadForm","onSubmit","addNewThread","newTitle","setNewTitle","newMessage","setNewMessage","type","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","asyncToGenerator","regenerator_default","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","arguments","update","put","concat","removeThread","delete","setToken","newToken","services_login","login","credentials","services_users","LoginForm","handleLogin","username","name","setUsername","password","setPassword","App","threads","setThreads","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","user","setUser","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","users","setUsers","useEffect","userService","initialUsers","catch","error","console","log","threadService","initialThreads","loggedUserJSON","window","localStorage","getItem","JSON","parse","_user2","preventDefault","loginService","setItem","stringify","t0","filter","thread","threadObject","date","Date","toISOString","userId","findUserIdByUsername","returnedThread","newThreadObject","find","t","changedThread","objectSpread","map","handleLogout","clear","u","Login","NewThreadFrom","components_Thread","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.54a31f62.chunk.js","sourcesContent":["import React, {useState} from 'react'\n  \nconst Thread = (props) => {\n\n  const [editedMessage, setEditedMessage] = useState(\"\")\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  return (\n    <div>\n      <h4>Thread:</h4>\n      <button onClick={() => props.deleteThread(props.id)}> delete </button>\n      <p>Title: {props.title}</p>\n      <p>Message: {props.message}</p>\n\n      <form >\n        <div>\n          new message\n          <input value={editedMessage}\n            onChange={handleEditedChange}/>\n        </div>\n        <button onClick={() => props.editThread(props.id, editedMessage)}> edit </button>\n      </form>\n    </div>\n  )\n}\n\nexport default Thread","import React from 'react'\n\nconst newThreadForm = (props) => {\n\n  const handleTitleChange = (event) => {\n    props.setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    props.setNewMessage(event.target.value)\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={props.addNewThread}>\n        <div>\n          title:\n              <input value={props.newTitle}\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n              <input value={props.newMessage}\n            onChange={handleMessageChange} />\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n    </div>\n  )\n}\n\nexport default newThreadForm\n\n","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token=null\n\nconst setToken = (newToken) => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n    \n}\n\nconst create = async (newObject) => {\n    const config = {\n        headers: { Authorization:token},\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n}\n\n\nconst update = (newObject) => {\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst removeThread = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    removeThread,\n    setToken\n}","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default {login}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll\n}","import React from 'react'\n\nconst LoginForm = (props) => {\n\n\n  const handleUsernameChange = (event) => {\n    props.setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    props.setPassword(event.target.value)\n  }\n\n    return (\n      <div>\n        <form onSubmit={props.handleLogin}>\n          <div>\n            username\n            <input type=\"text\" value={props.username} name='Username'\n              onChange={handleUsernameChange} />\n          </div>\n\n          <div>\n            password\n            <input type=\"password\" value={props.password} name='Password'\n              onChange={handlePasswordChange} />\n\n          </div>\n          <div>\n            <button type='submit'>login</button>\n          </div>\n        </form>\n      </div>\n    )\n\n  \n}\n\nexport default LoginForm","import React, { useState, useEffect } from 'react'\nimport Thread from './components/Thread'\nimport NewThreadForm from './components/NewThreadFrom'\nimport threadService from './services/threads'\nimport loginService from './services/login'\nimport userService from './services/users'\nimport LoginForm from './components/Login'\n\n\nconst App = () => {\n  const [threads, setThreads] = useState([])\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [users, setUsers] = useState([])\n\n  useEffect(()=> {\n    userService\n      .getAll().then(initialUsers => {\n        setUsers(initialUsers)\n      }).catch(error => {\n        console.log('error', error)\n      })\n  },[])\n\n  useEffect(() => {\n    threadService\n      .getAll().then(initialThreads => {\n        setThreads(initialThreads)\n      }).catch(error => {\n        console.log('error', error)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedCampus24User')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      threadService.setToken(user.token)\n    }\n  })\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      \n      window.localStorage.setItem(\n        'loggedCampus24User', JSON.stringify(user)\n      )\n      threadService.setToken(user.token)\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (e) {\n      console.log('error', e)\n    }\n  }\n\n  const deleteThread = (id) => {\n    threadService\n      .removeThread(id).then(() => {\n        setThreads(threads.filter(thread => thread.id !== id))\n      })\n  }\n\n  const rows = () => {\n    return (\n      threads.map(t =>\n        <Thread\n          key={t.id}\n          id={t.id}\n          title={t.title}\n          message={t.message}\n          deleteThread={deleteThread}\n          editThread={editThread}\n        />\n      )\n    )\n  }\n\n  const addNewThread = (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: findUserIdByUsername(user.name).id\n    }\n\n\n    setNewTitle('')\n    setNewMessage('')\n    threadService\n      .create(threadObject)\n      .then(returnedThread => {\n        setThreads(threads.concat(returnedThread))\n      })\n  }\n\n  const editThread = (id, editedMessage) => {\n\n    const newThreadObject = threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n\n    threadService\n      .update(changedThread)\n      .then(returnedThread => {\n        setThreads(threads.map(t => t.id !== changedThread.id ? t : returnedThread))\n      })\n  }\n\n  const loginFunction = () => (\n    <div>\n      <LoginForm handleLogin={handleLogin} username={username}\n        password={password} setUsername={setUsername} setPassword={setPassword} />\n    </div>\n  )\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.clear()\n  }\n\n  const threadFunction = () => (\n    <div>\n      <p>Hi {user.name}!</p>\n      <button onClick = {handleLogout}>logout</button>\n\n      <NewThreadForm addNewThread={addNewThread} editThread={editThread}\n        setNewTitle={setNewTitle} setNewMessage={setNewMessage}\n        newTitle={newTitle} newMessage={newMessage} />\n    </div>\n  )\n\n  const findThreadIdByTitle = (title) => {\n    return threads.find(t => t.title = title)\n  }\n\n  const findUserIdByUsername = (username) => {\n    return users.find(u => u.username = username)\n  }\n\n\n  return (\n\n    <div>\n      <h2>Campus24</h2>\n      {user === null ?\n        loginFunction() :\n        threadFunction()}\n      <h3>Threads</h3>\n      <ul>\n        {rows()}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}