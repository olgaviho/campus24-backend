{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/Style.js","components/NewThreadForm.js","services/login.js","services/comments.js","services/users.js","reducers/loginReducer.js","components/Login.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Search.js","reducers/commentsReducer.js","components/Comment.js","components/NewCommentForm.js","components/Thread.js","components/User.js","components/DeleteAccount.js","components/EditPassword.js","components/Settings.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","getToken","deleteThread","_ref5","_callee5","dispatch","_context5","threadService","_x5","threadReducer","toConsumableArray","reverse","index","findIndex","t","newState","filter","s","newOrder","Button","styled","button","_templateObject","SmallButton","_templateObject2","Input","input","_templateObject3","TextArea","textarea","_templateObject4","Page","div","_templateObject5","Title","_templateObject6","Navigation","_templateObject7","HappyNotification","_templateObject8","OneThread","_templateObject9","CommentInformation","_templateObject10","CommentText","_templateObject11","DropdownMenuItem","_templateObject12","DropdownMenuButton","_templateObject13","LogoutButton","_templateObject14","mapDispatchToProps","addThread","_ref2","_callee2","newThread","_context2","_x2","connect","user","props","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","t0","react_default","createElement","onSubmit","value","onChange","target","cols","rows","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","commentId","_context3","console","log","_x3","services_users","removeUser","request","logout","window","localStorage","clear","commentService","usersService","loginReducer","loginService","setItem","JSON","stringify","react_router","to","setUsername","password","setPassword","handleLogin","name","usersReducer","u","addUser","newUser","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","threads","comments","users","clickState","setClickState","active","items","numberOfItems","numberOfpages","Math","ceil","_loop","number","push","Pagination_default","Item","onClick","key","paginationBasic","size","slice","map","react_router_dom","thread","c","findUserNameById","searchWord","setSearchWord","threadIds","includes","commentsWithRealThread","toLowerCase","findThreadById","deleteComment","_ref4","_callee4","_context4","_x4","commentReducer","editComment","editedComment","editedMessage","setEditedMessage","showButtons","comment","handleEditedChange","newCommentObject","changedComment","find","objectSpread","addComment","newComment","changeOrder","commentMessage","setCommentMessage","addNewComment","commentObject","getThread","threadId","editThread","editedThread","changeDone","setChangeDone","newThreadObject","changedThread","threadComments","numberOfPages","className","components_Comment","NewCommentForm","us","deleteUser","deleteAccountFunction","loggedUser","EditPasswordFunction","userService","components_EditPassword","components_DeleteAccount","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","findUserById","padding","hidden","setHidden","style","lib","dropdownToggle","toggle","e","handleLogout","components_Notification","exact","path","render","AllThreads","Login","components_Search","components_NewUserForm","components_Settings","NewThreadForm","match","components_Thread","params","components_User","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.5889d47d.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n\n}\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken,\n  getToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_THREAD':\n    return [action.data,...state]\n  case 'INITIALIZE_THREADS':\n    const orderThreads = action.data.reverse()\n    return orderThreads\n  case 'EDIT_THREAD':\n    const index = state.findIndex(t => t.id === action.data.id)\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_THREAD':\n    const newstate = state.filter(s => s.id !== action.data)\n    return newstate\n  case 'CHANGE_ORDER':\n    const newOrder = state.filter(s => s.id !== action.data.id)\n    return [action.data,...newOrder]\n  default:\n    return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const changeOrder = (thread) => {\n  return async dispatch => {\n    dispatch({\n      type: 'CHANGE_ORDER',\n      data: thread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\n\nexport default threadReducer","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: silver;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  `\n\nconst SmallButton = styled.button`\n  background: silver;\n  font-size: 0.75em;\n  margin: 0.25em;\n  padding: 0.1em 0.3em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\n\nconst Input = styled.input`\n  margin: 0.25em;\n  `\nconst TextArea = styled.textarea`\n  margin: 0.25em;\n  `\nconst Page = styled.div`\n  padding: 1em;\n  background: mintcream;\n  `\nconst Title = styled.div`\n  background: steelblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  margin: 1em;\n  color: white;\n  `\n\nconst Navigation = styled.div`\n  background: skyblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\nconst HappyNotification = styled.div`\n  margin: 1em;\n  padding: 0.5em 1.3em;\n  border: 2px solid black;\n  border-radius: 2px;\n  background: white;\n  `\n\n\nconst OneThread = styled.div`\n  margin: 0.3em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n`\n\nconst CommentInformation = styled.div`\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n  font-size: 0.75em;\n  `\nconst CommentText = styled.div`\n\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: white;\n  font-size: 1.2em;\n  `\n\nconst DropdownMenuItem = styled.div`\n  float: right;\n  `\n\nconst DropdownMenuButton = styled.div`\n  float: right;\n  background: silver;\n  font-size: 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  padding: 0.1em 1em;\n  `\n\nconst LogoutButton = styled.div`\n  background: white;\n  font-size: 1em;\n  border: 1px solid white;\n  `\n\nexport { LogoutButton, DropdownMenuItem, DropdownMenuButton, TextArea, Title, CommentInformation, CommentText, Button, Input, Page, Navigation, HappyNotification, OneThread, SmallButton }","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\nimport { Input, TextArea, Button } from './Style'\n\nconst newThreadForm = (props) => {\n\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n    if (threadObject.title.length < 3) {\n      props.setNotification('Title must be at least three letters long')\n    } else if (threadObject.title.length > 100) {\n      props.setNotification('Title must be shorter than 100 letters')\n    } else if (threadObject.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (threadObject.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.addThread(threadObject)\n        props.setNotification('New thread added')\n        setNewTitle('')\n        setNewMessage('')\n      } catch (e) {\n        props.setNotification('Failed to create new comment')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <Input value={newTitle} id='NewTitle'\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <div>\n            <TextArea cols='50' rows='3' value={newMessage} id='NewMessage'\n              onChange={handleMessageChange} />\n          </div>\n        </div>\n        <Button type='submit'>add</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n\nconst update = async (updatedObject) => {\n\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  }\n\n  return null\n}\n\nconst removeComment = async (commentId) => {\n\n  console.log('token', token)\n\n\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.delete(`${baseUrl}/${commentId}`, config)\n\n    return response.data\n  }\n  return null\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment,\n  getToken\n}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n\n}\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeUser = async (userId) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.delete(`${baseUrl}/${userId}`, config)\n\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  update,\n  getAll,\n  create,\n  removeUser,\n  removeToken,\n  setToken,\n  getToken\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\nimport usersService from './../services/users'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    usersService.setToken(data.token)\n\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n\n    const user = await loginService.login(data)\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n\n    threadService.setToken(user.token)\n    commentService.setToken(user.token)\n    usersService.setToken(user.token)\n  \n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n    usersService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Button, Input } from './Style'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = {\n      username: username,\n      password: password\n    }\n    try {\n      await props.login(user)\n      props.setNotification(`Welcome ${user.username}!`)\n    } catch (e) {\n      props.setNotification('Wrong username or password!')\n    }\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <Input type=\"text\" value={username} name='Username' id='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <Input type=\"password\" value={password} name='Password' id='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <Button type='submit'>login</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  case 'DELETE_USER':\n    // eslint-disable-next-line no-case-declarations\n    const newstate = state.filter(u => u.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n\n  return async dispatch => {\n    await usersService.removeUser(id)\n    dispatch({\n      type: 'DELETE_USER',\n      data: id\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Input, Button } from './Style'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    if (newUserObject.username.length < 3) {\n      props.setNotification('Username must be at least three letters long')\n    } else if (newUserObject.name.length < 3) {\n      props.setNotification('Name must be at least three letters long')\n    } else if (newUserObject.password.length < 5) {\n      props.setNotification('Password must be at least five letters long')\n    } else if (newUserObject.username.length > 15) {\n      props.setNotification('Username must be at shorter than 16 letters')\n    } else if (newUserObject.name.length > 15) {\n      props.setNotification('Name must be at shorter than 16 letters')\n    } else if (newUserObject.password.length > 30) {\n      props.setNotification('Password must be at shorter than 31 letters')\n\n    } else {\n      try {\n        await props.addUser(newUserObject)\n        props.setNotification('New user added!')\n        setNewName('')\n        setNewPassword('')\n        setNewUsername('')\n      } catch (e) {\n        props.setNotification('Username must be unique')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <Input type='text' value={newUsername} name='newUsername' id='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <Input type='text' value={newName} name='newName' id='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <Input type='password' value={newPassword} name='newPassword' id='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <Button type='submit'>Add a new user</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { HappyNotification } from './Style'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div>\n      <HappyNotification>\n        {props.notification}\n      </HappyNotification>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OneThread } from './Style'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst allThreads = (props) => {\n  const [clickState, setClickState] = useState(1)\n\n  const countComments = (thread) => {\n\n    const commentsOfThread = props.comments.filter(c => c.thread === thread.id)\n    return commentsOfThread.length\n  }\n\n\n  let active = clickState\n  let items = []\n  const numberOfItems = props.threads.length\n  const itemsPerPage = 5\n  const numberOfpages = Math.ceil(numberOfItems/itemsPerPage)\n\n  for (let number = 1; number <= numberOfpages; number++) {\n    items.push(\n      <Pagination.Item onClick={() => {\n        setClickState(number)\n      }}\n      key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    )\n  }\n\n  const paginationBasic = (\n    <div>\n      <Pagination size=\"sm\">{items}</Pagination>\n    </div>\n  )\n\n\n  return (\n    <div>\n      {props.threads.slice(active*itemsPerPage - itemsPerPage, active*itemsPerPage).map(t =>\n        <OneThread key={t.id}>\n          <Link key={t.id} to={`/thread/${t.id}`}> {t.title} </Link>\n          &nbsp;&nbsp; comments {countComments(t)}\n\n          &nbsp;&nbsp; started by: <Link key={t.user} to={`/user/${t.user}`}> {props.findUserNameById(t.user)} </Link>\n\n        </OneThread>\n      )}\n\n      {paginationBasic}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Input, CommentInformation, CommentText } from './Style'\nimport { Link } from 'react-router-dom'\n\n\nconst Search = (props) => {\n\n  const [searchWord, setSearchWord] = useState('')\n\n  const handleSearchWordChange = (event) => {\n    setSearchWord(event.target.value)\n  }\n\n  const commentsWithRealThread = () => {\n    const threadIds = props.threads.map(t => t.id)\n    if (threadIds.length === 0) {\n      return []\n    } else {\n      return props.comments.filter(c => {\n        return (threadIds.includes(c.thread))\n\n      })\n    }\n  }\n\n  const commentsToShow = () => {\n    let commentWithThread = []\n    commentWithThread = commentsWithRealThread()\n\n    return commentWithThread.filter(c => {\n      if (searchWord.length) {\n        return c.message.toLowerCase().includes(searchWord.toLowerCase())\n      }\n      return false\n    })\n  }\n\n\n  return (\n    <div>\n      Search for\n      <Input value={searchWord} id='searchWord'\n        onChange={handleSearchWordChange} />\n      {commentsToShow().map(c =>\n\n        <CommentInformation key={c.id} > Author: {props.findUserNameById(c.user)} Date: {c.date}\n          <CommentText> {c.message} </CommentText>\n          Thread: <Link key={c.thread} to={`/thread/${c.thread}`}> {props.findThreadById(c.thread).title} </Link>\n        </CommentInformation>\n\n      )}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(Search)","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n\n  return async dispatch => {\n\n    await commentService.removeComment(data)\n\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteComment, editComment } from './../reducers/commentsReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Comment = (props) => {\n  const [editedMessage, setEditedMessage] = useState('')\n\n  let showButtons = false\n\n  if (props.comment === undefined || props.comment === null) {\n    return ('')\n  }\n\n  if (props.user === null) {\n\n    return (\n      <div>\n        <CommentInformation> Author: {props.findUserNameById(props.comment.user)} Date: {props.comment.date}\n          <CommentText> {props.comment.message} </CommentText>\n        </CommentInformation>\n      </div>\n    )\n  }\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  const deleteComment = async (id) => {\n\n    try {\n      await props.deleteComment(id)\n      props.setNotification('Comment deleted')\n    } catch (e) {\n      props.setNotification('Failed to delete comment')\n    }\n  }\n\n\n  const editComment = async (id) => {\n    const newCommentObject = props.comments.find(c => c.id === id)\n    const changedComment = { ...newCommentObject, message: editedMessage }\n\n    if (changedComment.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (changedComment.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.editComment(changedComment)\n        props.setNotification('Comment edited')\n        setEditedMessage('')\n\n      } catch (e) {\n        console.log(e)\n        props.setNotification('Failed to edit comment')\n      }\n    }\n  }\n\n  const editFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editComment'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editComment(props.comment.id, editedMessage)}> edit comment </SmallButton>\n      </div>\n      <SmallButton id='deleteComment' onClick={() => deleteComment(props.comment.id)}> delete comment </SmallButton>\n    </div>\n  )\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.comment.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div>\n      <CommentInformation> Author:  {props.findUserNameById(props.comment.user)} Date: {props.comment.date}\n        <CommentText> {props.comment.message}\n\n        </CommentText>\n        {showButtons && editFunction()}\n      </CommentInformation>\n\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\nimport { changeOrder } from './../reducers/threadReducer'\nimport { Button, TextArea } from './Style'\n\nconst newCommentForm = props => {\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = event => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n\n    if (commentObject.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (commentObject.message.length > 2000) {\n      props.setNotification('Message must be shoter than 2000 letters')\n    } else {\n      try {\n        await props.addComment(commentObject)\n        const getThread = props.threads.filter(t => t.id === props.threadId)\n        await props.changeOrder(getThread[0])\n        props.setNotification('New comment added')\n        setCommentMessage('')\n      } catch (e) {\n        props.setNotification('Failed to create new comment')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <div>\n        <TextArea\n          rows=\"3\"\n          cols=\"50\"\n          value={commentMessage}\n          id=\"newComment\"\n          onChange={handleMessageChange}\n        />\n      </div>\n      <Button onClick={() => addNewComment()}>add</Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment,\n  changeOrder\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(newCommentForm)\n","import React, { useState } from 'react'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { connect } from 'react-redux'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Redirect } from 'react-router-dom'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n  const [clickState, setClickState] = useState(1)\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n\n    try {\n      await props.deleteThread(id)\n      props.setNotification('Thread deleted')\n      setChangeDone(true)\n    } catch (e) {\n      props.setNotification('Failed to delete thread')\n    }\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n\n    if (changedThread.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (changedThread.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.editThread(changedThread)\n        props.setNotification('Thread edited')\n        setEditedMessage('')\n\n      } catch (e) {\n        props.setNotification('Failed to edit thread')\n        setEditedMessage('')\n      }\n    }\n  }\n\n\n\n  const findComments = () => {\n    const threadComments = props.comments.filter(c => c.thread === props.thread.id)\n    return threadComments\n  }\n\n  const threadComments = findComments()\n  let active = clickState\n  let items = []\n  const numberOfItems = threadComments.length\n  const itemsPerPage = 5\n  const numberOfPages = Math.ceil(numberOfItems / itemsPerPage)\n\n  for (let number = 1; number <= numberOfPages; number++) {\n    items.push(\n      <Pagination.Item onClick={() => {\n        setClickState(number)\n      }} key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    )\n  }\n\n  const paginationBasic = (\n    <div>\n      <Pagination size='sm'> {items} </Pagination>\n    </div>\n  )\n\n  if (props.user === null) {\n\n\n    return (\n      <div className='thread'>\n        <CommentInformation>\n          <h3>{props.thread.title}</h3>\n          Author: {props.findUserNameById(props.thread.user)}\n          <CommentText>{props.thread.message}</CommentText>\n        </CommentInformation>\n        Comments\n\n        {threadComments.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(c =>\n          <Comment key={c.id} comment={c} findUserNameById={props.findUserNameById} />)}\n\n        {paginationBasic}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editMessage'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editThread(props.thread.id, editedMessage)}> edit </SmallButton>\n      </div>\n\n      <SmallButton id='deleteThread' onClick={() => deleteThread(props.thread.id)}> delete </SmallButton>\n    </div>\n  )\n\n  let showButtons = false\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.thread.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div className='thread'>\n      <CommentInformation>\n        <h3>{props.thread.title}</h3>\n        Author: {props.findUserNameById(props.thread.user)}\n        <CommentText>{props.thread.message}</CommentText>\n        {showButtons && buttonFunction()}\n      </CommentInformation>\n      Comments\n      {threadComments.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(c =>\n        <Comment comment={c} key={c.id} findUserNameById={props.findUserNameById} />)}\n\n      {paginationBasic}\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nconst User = (props) => {\n\n\n  if (props.us === undefined || props.us === null) {\n    return (\n      null\n    )\n  } else if (props.us === 'unknown user') {\n    return (\n      <div>This user has been deleted :( </div>\n    )\n  }\n\n  return (\n    <div>\n      <h3> User: {props.us.username}</h3>\n      <p>Number of threads started: {props.threads.filter(t => t.user === props.us.id).length}</p>\n      <p>Number of comments written: {props.comments.filter(c => c.user === props.us.id).length}</p>\n\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(User)","import { connect } from 'react-redux'\nimport React from 'react'\nimport { logout } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { deleteUser } from './../reducers/usersReducer'\nimport { deleteThread } from './../reducers/threadReducer'\nimport { deleteComment } from './../reducers/commentsReducer'\nimport { Redirect } from 'react-router-dom'\nimport { Button } from './Style'\n\nconst DeleteAccount = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const deleteAccountFunction = async () => {\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    try {\n\n      await props.deleteUser(loggedUser.id)\n      props.setNotification('Account deleted!')\n      props.logout()\n\n    } catch (e) {\n      props.setNotification('Could not delete account!')\n    }\n  }\n\n  return (\n    <div>\n      <Button id='deleteAccount' name='deleteAccount' onClick={() => deleteAccountFunction()}>Delete </Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification,\n  deleteUser,\n  deleteThread,\n  deleteComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import { connect } from 'react-redux'\nimport React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Button, Input } from './Style'\nimport { setNotification } from './../reducers/notificationReducer'\nimport userService from './../services/users'\n\nconst EditPassword = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const EditPasswordFunction = async () => {\n\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    const newUser = {\n      password: newPassword,\n      username: loggedUser.username,\n      name: loggedUser.name,\n      id: loggedUser.id\n    }\n\n\n    if (newUser.password.length < 3) {\n      props.setNotification('Password must be at least three letters long')\n    } else if (newUser.password.length > 20) {\n      props.setNotification('Password must be shorter than 20 letters')\n    } else {\n      try {\n        await userService.update(newUser)\n        props.setNotification('Password edited')\n        setNewPassword('')\n\n      } catch (e) {\n        console.log(e)\n        props.setNotification('Failed to edit password')\n      }\n    }\n  }\n\n  return (\n    <div>\n      new message\n      <Input value={newPassword} id='editComment'\n        onChange={handleNewPasswordChange} />\n      <Button onClick={() => EditPasswordFunction()}>Edit password</Button>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n}\n\nconst mapDispatchToProps = {\n  setNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPassword)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Button } from './Style'\nimport DeleteAccount from './DeleteAccount'\nimport EditPassword from './EditPassword'\n\n\nconst Settings = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n\n  return (\n    <div>\n      <h3>Settings</h3>\n\n      <h5>Change password</h5>\n      <EditPassword/>\n      <h5>Delete Account</h5>\n      <DeleteAccount/>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)","import React, { useEffect, useState } from 'react'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Search from './components/Search'\nimport Thread from './components/Thread'\nimport User from './components/User'\nimport Settings from './components/Settings'\nimport { Page, Navigation, Title, DropdownMenuItem, DropdownMenuButton, LogoutButton } from './components/Style'\n\nimport './index.css'\nimport { connect } from 'react-redux'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser, logout } from './reducers/loginReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n} from 'styled-dropdown-component'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n  }\n\n  const findUserNameById = (id) => {\n\n    const us = props.users.find(u => u.id === id)\n    if (us === null || us === undefined) {\n      return 'unknown user'\n    }\n    return us.username\n  }\n\n  const findUserById = (id) => {\n\n    const us = props.users.find(u => u.id === id)\n    if (us === null || us === undefined) {\n      return 'unknown user'\n    }\n    return us\n  }\n\n  const findThreadById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n  const handleLogout = () => {\n\n    try {\n      props.logout()\n      props.setNotification('See you soon!')\n    } catch (e) {\n      props.setNotification('Logout failed!')\n    }\n  }\n\n\n  const padding = { padding: 5 }\n  const [hidden, setHidden] = useState(true)\n\n\n  return (\n    <div>\n      <Page>\n        <Router>\n          <div>\n            <div>\n              <Title>\n                <h1>Campus24</h1>\n                <Navigation>\n                  <Link style={padding} to=\"/\">Threads</Link>\n\n                  <Link style={padding} to=\"/search\">Search</Link>\n\n                  {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add a new thread</Link>}\n\n                  <DropdownMenuItem>\n                    <Dropdown>\n                      <DropdownMenuButton dropdownToggle onClick={() => setHidden(!hidden)} id = 'dropdown' name= 'dropdown'>\n                        Menu\n                      </DropdownMenuButton>\n                      <DropdownMenu hidden={hidden} toggle={() => setHidden(!hidden)}>\n                        {props.user !== null && <LogoutButton onClick = {() => handleLogout()}> <DropdownItem id='logoutItem' name='logoutItem'>Logout</DropdownItem> </LogoutButton>}\n                        {props.user !== null && <Link to=\"/settings\" ><DropdownItem id='settingsItem' name='settingItem'>Settings</DropdownItem></Link>}\n                        {props.user === null && <Link to=\"/login\"><DropdownItem id='loginItem' name='loginItem'>Login</DropdownItem></Link>}\n                        {props.user === null && <Link to=\"/create\" ><DropdownItem id='createUserItem' name='createUserItem'>Create User</DropdownItem></Link>}\n                      </DropdownMenu>\n                    </Dropdown>\n                  </DropdownMenuItem>\n\n                </Navigation>\n              </Title>\n              {props.notification !== null && <Notification />}\n            </div>\n            <Route exact path=\"/\" render={() => <AllThreads findUserNameById={findUserNameById} />} />\n            <Route exact path=\"/login\" render={() => <LoginForm />} />\n            <Route exact path=\"/search\" render={() => <Search findUserNameById={findUserNameById} findThreadById={findThreadById} />} />\n            <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n            <Route exact path=\"/settings\" render={() => <Settings />} />\n            <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n            <Route exact path=\"/thread/:id\" render={({ match }) =>\n              <Thread thread={findThreadById(match.params.id)}\n                findUserIdByUsername={findUserIdByUsername} findUserNameById={findUserNameById} />}\n            />\n            <Route exact path=\"/user/:id\" render={({ match }) =>\n              <User us={findUserById(match.params.id)} />}\n            />\n          </div>\n        </Router>\n      </Page>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser,\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './index.css'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}