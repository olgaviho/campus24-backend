{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/Style.js","components/NewThreadForm.js","services/login.js","services/comments.js","services/users.js","reducers/loginReducer.js","components/Login.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Logout.js","reducers/commentsReducer.js","components/Comment.js","components/NewCommentForm.js","components/Thread.js","components/DeleteAccount.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","getToken","deleteThread","_ref4","_callee4","dispatch","_context4","threadService","_x4","threadReducer","toConsumableArray","index","findIndex","t","newState","filter","s","Button","styled","button","_templateObject","SmallButton","_templateObject2","Input","input","_templateObject3","TextArea","textarea","_templateObject4","Page","div","_templateObject5","Title","_templateObject6","Navigation","_templateObject7","HappyNotification","_templateObject8","OneThread","_templateObject9","CommentInformation","_templateObject10","CommentText","_templateObject11","mapDispatchToProps","addThread","_ref2","_callee2","newThread","_context2","_x2","connect","user","props","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","t0","console","log","react_default","createElement","onSubmit","value","onChange","target","cols","rows","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","_context3","_x3","services_users","removeUser","request","logout","window","localStorage","clear","commentService","usersService","loginReducer","loginService","setItem","JSON","stringify","react_router","to","setUsername","password","setPassword","handleLogin","name","usersReducer","u","addUser","newUser","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","threads","comments","users","map","key","react_router_dom","thread","c","findUserNameById","onClick","e","handleLogout","deleteComment","commentReducer","editComment","editedComment","editedMessage","setEditedMessage","showButtons","comment","handleEditedChange","newCommentObject","changedComment","find","objectSpread","addComment","newComment","commentMessage","setCommentMessage","addNewComment","commentObject","threadId","editThread","editedThread","changeDone","setChangeDone","newThreadObject","changedThread","findComments","className","components_Comment","NewCommentForm","deleteUser","deleteAccountFunction","loggedUser","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","padding","style","components_Notification","exact","path","render","AllThreads","Login","components_NewUserForm","components_Logout","components_DeleteAccount","NewThreadForm","match","components_Thread","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.627ec5c6.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n  }\n  return null\n\n}\n\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null){\n\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken,\n  getToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_THREAD':\n    return [...state, action.data]\n  case 'INITIALIZE_THREADS':\n    return action.data\n  case 'EDIT_THREAD':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(t => t.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_THREAD':\n    // eslint-disable-next-line no-case-declarations\n    const newstate = state.filter(s => s.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\n\nexport default threadReducer","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: silver;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  `\n\nconst SmallButton = styled.button`\n  background: silver;\n  font-size: 0.75em;\n  margin: 0.25em;\n  padding: 0.1em 0.3em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\n\nconst Input = styled.input`\n  margin: 0.25em;\n  `\nconst TextArea = styled.textarea`\nmargin: 0.25em;\n`\nconst Page = styled.div`\n  padding: 1em;\n  background: mintcream;\n`\nconst Title = styled.div`\n  background: steelblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  margin: 1em;\n  color: white;\n`\n\nconst Navigation = styled.div`\n  background: skyblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n`\nconst HappyNotification = styled.div`\n  margin: 1em;\n  padding: 0.5em 1.3em;\n  border: 2px solid black;\n  border-radius: 2px;\n  background: white;\n`\n\n\nconst OneThread = styled.div`\n  margin: 0.3em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n`\n\nconst CommentInformation = styled.div`\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n  font-size: 0.75em;\n`\nconst CommentText = styled.div`\n\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: white;\n  font-size: 1.2em;\n`\n\n\nexport { TextArea, Title, CommentInformation, CommentText, Button, Input, Page, Navigation, HappyNotification, OneThread, SmallButton }","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\nimport { Input, TextArea, Button } from './Style'\n\nconst newThreadForm = (props) => {\n\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n\n    setNewTitle('')\n    setNewMessage('')\n\n\n    try {\n      await props.addThread(threadObject)\n      props.setNotification('New thread added')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to create new comment')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <Input value={newTitle} id='NewTitle'\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <div>\n            <TextArea cols='50' rows='3' value={newMessage} id='NewMessage'\n              onChange={handleMessageChange} />\n          </div>\n        </div>\n        <Button type='submit'>add</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n      \n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n\nconst update = async (updatedObject) => {\n\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  }\n\n  return null\n}\n\nconst removeComment = async (id) => {\n\n\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n \n    return response.data\n  }\n  return null\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment,\n  getToken\n}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n\n}\n\nconst removeUser = async (id) => {\n\n  console.log('id', id)\n\n  console.log('token', token)\n\n  if (token !== null) {\n    console.log('token', token)\n\n    const config = {\n      headers: { Authorization: token },\n    }\n    console.log('config', config)\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    console.log('request', request)\n    return request.then(response => response.data)\n  }\n  console.log('failed')\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  removeUser,\n  removeToken,\n  setToken,\n  getToken\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\nimport usersService from './../services/users'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    usersService.setToken(data.token)\n\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n\n    const user = await loginService.login(data)\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n\n    threadService.setToken(user.token)\n    commentService.setToken(user.token)\n    usersService.setToken(user.token)\n  \n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n    usersService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Button, Input } from './Style'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    const user = {\n      username: username,\n      password: password\n    }\n    try {\n      await props.login(user)\n      props.setNotification('Welcome!')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Wrong username or password!')\n    }\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <Input type=\"text\" value={username} name='Username' id='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <Input type=\"password\" value={password} name='Password' id='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <Button type='submit'>login</Button>\n        </div>\n      </form>\n    </div>\n  )\n\n\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  case 'DELETE_USER':\n    // eslint-disable-next-line no-case-declarations\n    const newstate = state.filter(u => u.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n\n  return async dispatch => {\n    await usersService.removeUser(id)\n    dispatch({\n      type: 'DELETE_USER',\n      data: id\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Input, Button } from './Style'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    setNewName('')\n    setNewPassword('')\n    setNewUsername('')\n\n    try {\n      await props.addUser(newUserObject)\n      props.setNotification('New user added!')\n    } catch (e) {\n      props.setNotification('Username must be unique')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <Input type='text' value={newUsername} name='newUsername' id='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <Input type='text' value={newName} name='newName' id='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <Input type='password' value={newPassword} name='newPassword' id='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <Button type='submit'>Add a new user</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { HappyNotification } from './Style'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div>\n      <HappyNotification>\n        {props.notification}\n      </HappyNotification>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OneThread } from './Style'\n\nconst allThreads = (props) => {\n\n  const countComments = (thread) => {\n\n    const commentsOfThread = props.comments.filter(c => c.thread === thread.id)\n    return commentsOfThread.length\n  }\n\n\n  return (\n    <div>\n      {props.threads.map(t =>\n        <OneThread key={t.id}>\n          <Link key={t.id} to={`/thread/${t.id}`}> {t.title} </Link>\n          &nbsp;&nbsp; comments {countComments(t)}\n\n          &nbsp;&nbsp; started by: {props.findUserNameById(t.user)}\n\n        </OneThread>\n      )}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { logout } from './../reducers/loginReducer'\nimport { Button } from './Style'\n\n\n\nconst Logout = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const handleLogout = () => {\n\n    try {\n      props.logout()\n      props.setNotification('See you soon!')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Logout failed!')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Logout</h3>\n      <Button onClick = {() => handleLogout()}>logout</Button>\n    </div>\n  )\n\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n\n  return async dispatch => {\n\n    await commentService.removeComment(data)\n\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteComment, editComment } from './../reducers/commentsReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Comment = (props) => {\n  const [editedMessage, setEditedMessage] = useState('')\n\n  let showButtons = false\n\n\n  if (props.comment === undefined || props.comment === null) {\n    return ('')\n  }\n\n  // näkymä käyttäjälle, joka ei ole kirjautunut\n  if (props.user === null) {\n\n    return (\n      <div>\n        <CommentInformation> Author: {props.findUserNameById(props.comment.user)} Date: {props.comment.date}\n          <CommentText> {props.comment.message} </CommentText>\n        </CommentInformation>\n      </div>\n    )\n  }\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  const deleteComment = async (id) => {\n\n    try {\n      await props.deleteComment(id)\n      props.setNotification('Comment deleted')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to delete comment')\n    }\n  }\n\n\n  const editComment = async (id) => {\n    const newCommentObject = props.comments.find(c => c.id === id)\n    const changedComment = { ...newCommentObject, message: editedMessage }\n\n    try {\n      await props.editComment(changedComment)\n      props.setNotification('Comment edited')\n      setEditedMessage('')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to edit comment')\n    }\n  }\n\n  const editFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editComment'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editComment(props.comment.id, editedMessage)}> edit comment </SmallButton>\n      </div>\n      <SmallButton id='deleteComment' onClick={() => deleteComment(props.comment.id)}> delete comment </SmallButton>\n    </div>\n  )\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.comment.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div>\n      <CommentInformation> Author:  {props.findUserNameById(props.comment.user)} Date: {props.comment.date}\n        <CommentText> {props.comment.message}\n\n        </CommentText>\n        {showButtons && editFunction()}\n      </CommentInformation>\n\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\nimport { Button, TextArea } from './Style'\n\nconst newCommentForm = (props) => {\n\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = (event) => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n    try {\n      await props.addComment(commentObject)\n      props.setNotification('New comment added')\n      setCommentMessage('')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to create new comment')\n    }\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <div>\n        <TextArea rows='3' cols=\"50\" value={commentMessage} id='newComment'\n          onChange={handleMessageChange} />\n      </div>\n      <Button onClick={() => addNewComment()}>add</Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newCommentForm)","import React, { useState } from 'react'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { connect } from 'react-redux'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Redirect } from 'react-router-dom'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n\n    try {\n      await props.deleteThread(id)\n      props.setNotification('Thread deleted')\n      setChangeDone(true)\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to delete thread')\n    }\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n\n    try {\n      await props.editThread(changedThread)\n      props.setNotification('Thread edited')\n      setEditedMessage('')\n\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Failed to edit thread')\n      setEditedMessage('')\n    }\n  }\n\n\n\n  const findComments = () => {\n    const threadComments = props.comments.filter(c => c.thread === props.thread.id)\n    return threadComments\n  }\n\n  if (props.user === null) {\n\n    return (\n      <div className='thread'>\n        <CommentInformation>\n          <h3>{props.thread.title}</h3>\n          Author: {props.findUserNameById(props.thread.user)}\n          <CommentText>{props.thread.message}</CommentText>\n        </CommentInformation>\n        Comments\n        {findComments().map(c => <Comment key={c.id} comment={c} findUserNameById={props.findUserNameById}/>)}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editMessage'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editThread(props.thread.id, editedMessage)}> edit </SmallButton>\n      </div>\n\n      <SmallButton id='deleteThread' onClick={() => deleteThread(props.thread.id)}> delete </SmallButton>\n    </div>\n  )\n\n  let showButtons = false\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.thread.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div className='thread'>\n      <CommentInformation>\n        <h3>{props.thread.title}</h3>\n        Author: {props.findUserNameById(props.thread.user)}\n        <CommentText>{props.thread.message}</CommentText>\n        {showButtons && buttonFunction()}\n      </CommentInformation>\n      Comments\n      {findComments().map(c => <Comment comment={c} key={c.id} findUserNameById={props.findUserNameById}/>)}\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import { connect } from 'react-redux'\nimport React from 'react'\nimport { logout } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { deleteUser } from './../reducers/usersReducer'\nimport { deleteThread } from './../reducers/threadReducer'\nimport { deleteComment } from './../reducers/commentsReducer'\nimport { Redirect } from 'react-router-dom'\nimport { Button } from './Style'\n\nconst DeleteAccount = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const deleteAccountFunction = async () => {\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    try {\n\n      await props.deleteUser(loggedUser.id)\n      props.setNotification('Account deleted!')\n      props.logout()\n\n    } catch (e) {\n      console.log('error:', e)\n      props.setNotification('Could not delete account!')\n    }\n  }\n\n  return (\n    <div>\n      Are you sure that you want to delete your account?\n      <div>\n        <Button onClick={() => deleteAccountFunction()}>Confirm</Button>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification,\n  deleteUser,\n  deleteThread,\n  deleteComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useEffect } from 'react'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Logout from './components/Logout'\nimport Thread from './components/Thread'\nimport DeleteAccount from './components/DeleteAccount'\nimport { Page, Navigation, Title } from './components/Style'\n\nimport './index.css'\nimport { connect } from 'react-redux'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser } from './reducers/loginReducer'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n  }\n\n  const findUserNameById = (id) => {\n\n    const user = props.users.find(u => u.id === id)\n    if (user === null || user === undefined) {\n      return 'unknown user'\n    }\n    return user.username\n  }\n\n  const findThreadIdById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n\n  const padding = { padding: 5 }\n\n\n  return (\n    <div>\n      <Page>\n        <Router>\n          <div>\n            <div>\n              <Title>\n                <h1>Campus24</h1>\n                <Navigation>\n                  <Link style={padding} to=\"/\">Threads</Link>\n                  {props.user === null &&\n                    <Link style={padding} to=\"/login\">Login</Link>}\n                  {props.user === null &&\n                    <Link style={padding} to=\"/create\">Create new user</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/logout\">Logout</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add a new thread</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/deleteAccount\">Delete account</Link>}\n                </Navigation>\n              </Title>\n              {props.notification !== null && <Notification />}\n            </div>\n            <Route exact path=\"/\" render={() => <AllThreads findUserNameById={findUserNameById} />} />\n            <Route exact path=\"/login\" render={() => <LoginForm />} />\n            <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n            <Route exact path=\"/logout\" render={() => <Logout />} />\n            <Route exact path=\"/deleteAccount\" render={() => <DeleteAccount />} />\n            <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n            <Route exact path=\"/thread/:id\" render={({ match }) =>\n              <Thread thread={findThreadIdById(match.params.id)}\n                findUserIdByUsername={findUserIdByUsername} findUserNameById={findUserNameById} />}\n            />\n          </div>\n        </Router>\n      </Page>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './index.css'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}