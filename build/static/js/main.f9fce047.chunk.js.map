{"version":3,"sources":["reducers/notificationReducer.js","services/threads.js","reducers/threadReducer.js","components/Style.js","components/NewThreadForm.js","services/login.js","services/comments.js","services/users.js","reducers/loginReducer.js","components/Login.js","reducers/usersReducer.js","components/NewUserForm.js","components/Notification.js","components/AllThreads.js","components/Logout.js","reducers/commentsReducer.js","components/Comment.js","components/NewCommentForm.js","components/Thread.js","components/DeleteAccount.js","App.js","store.js","index.js"],"names":["setNotification","content","dispach","type","setTimeout","notificationReducer","state","arguments","length","undefined","action","baseUrl","token","services_threads","getAll","axios","get","then","response","data","create","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","newObject","config","wrap","_context","prev","next","headers","Authorization","post","sent","abrupt","stop","_x","apply","this","update","put","concat","id","removeThread","delete","setToken","newToken","removeToken","getToken","deleteThread","_ref4","_callee4","dispatch","_context4","threadService","_x4","threadReducer","toConsumableArray","reverse","index","findIndex","t","newState","filter","s","Button","styled","button","_templateObject","SmallButton","_templateObject2","Input","input","_templateObject3","TextArea","textarea","_templateObject4","Page","div","_templateObject5","Title","_templateObject6","Navigation","_templateObject7","HappyNotification","_templateObject8","OneThread","_templateObject9","CommentInformation","_templateObject10","CommentText","_templateObject11","mapDispatchToProps","addThread","_ref2","_callee2","newThread","_context2","_x2","connect","user","props","_useState","useState","_useState2","slicedToArray","newTitle","setNewTitle","_useState3","_useState4","newMessage","setNewMessage","addNewThread","event","threadObject","preventDefault","title","message","date","Date","toISOString","userId","findUserIdByUsername","username","t0","react_default","createElement","onSubmit","value","onChange","target","cols","rows","services_login","login","credentials","services_comments","updatedObject","removeComment","_ref3","_callee3","_context3","_x3","services_users","removeUser","request","logout","window","localStorage","clear","commentService","usersService","loginReducer","loginService","setItem","JSON","stringify","react_router","to","setUsername","password","setPassword","handleLogin","name","usersReducer","u","addUser","newUser","newUsername","setNewUsername","newName","setNewName","_useState5","_useState6","newPassword","setNewPassword","createNewUser","newUserObject","notification","threads","comments","users","clickState","setClickState","active","items","numberOfItems","numberOfpages","Math","ceil","_loop","number","push","Pagination_default","Item","onClick","key","paginationBasic","size","slice","map","react_router_dom","thread","c","findUserNameById","e","console","log","handleLogout","deleteComment","commentReducer","editComment","editedComment","editedMessage","setEditedMessage","showButtons","comment","handleEditedChange","newCommentObject","changedComment","find","objectSpread","addComment","newComment","commentMessage","setCommentMessage","addNewComment","commentObject","threadId","editThread","editedThread","changeDone","setChangeDone","newThreadObject","changedThread","threadComments","numberOfPages","className","components_Comment","NewCommentForm","deleteUser","deleteAccountFunction","loggedUser","initializeThreads","initializeComments","initializeUsers","setUser","useEffect","loggedUserJSON","getItem","parse","padding","style","components_Notification","exact","path","render","AllThreads","Login","components_NewUserForm","components_Logout","components_DeleteAccount","NewThreadForm","match","components_Thread","params","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.f9fce047.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'NEW_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (content) => {\n  return dispach => {\n    dispach({\n      type: 'NEW_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispach({\n        type: 'CLEAR_NOTIFICATION',\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","import axios from 'axios'\nconst baseUrl = '/api/threads'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.post(baseUrl, newObject, config)\n\n    return response.data\n  }\n  return null\n\n}\n\n\nconst update = (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n    return request.then(response => response.data)\n  }\n\n  return null\n}\n\nconst removeThread = (id) => {\n\n  if (token !== null){\n\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  removeThread,\n  setToken,\n  removeToken,\n  getToken\n}","import threadService from './../services/threads'\n\nconst threadReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_THREAD':\n    return [action.data,...state]\n  case 'INITIALIZE_THREADS':\n    const orderThreads = action.data.reverse()\n    return orderThreads\n  case 'EDIT_THREAD':\n    const index = state.findIndex(t => t.id === action.data.id)\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_THREAD':\n    const newstate = state.filter(s => s.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeThreads = () => {\n  return async dispatch => {\n    const threads = await threadService.getAll()\n    dispatch({\n      type: 'INITIALIZE_THREADS',\n      data: threads\n    })\n  }\n}\n\nexport const addThread = (data) => {\n\n  return async dispatch => {\n    const newThread = await threadService.create(data)\n    dispatch({\n      type: 'NEW_THREAD',\n      data: newThread\n    })\n  }\n}\n\nexport const editThread = (data) => {\n\n  return async dispatch => {\n    const editedThread = await threadService.update(data)\n    dispatch({\n      type: 'EDIT_THREAD',\n      data: editedThread\n    })\n  }\n}\n\nexport const deleteThread = (data) => {\n  return async dispatch => {\n    await threadService.removeThread(data)\n    dispatch({\n      type: 'DELETE_THREAD',\n      data: data\n    })\n  }\n}\n\n\nexport default threadReducer","import styled from 'styled-components'\n\nconst Button = styled.button`\n  background: silver;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid black;\n  border-radius: 3px;\n  `\n\nconst SmallButton = styled.button`\n  background: silver;\n  font-size: 0.75em;\n  margin: 0.25em;\n  padding: 0.1em 0.3em;\n  border: 1px solid black;\n  border-radius: 1px;\n  `\n\nconst Input = styled.input`\n  margin: 0.25em;\n  `\nconst TextArea = styled.textarea`\nmargin: 0.25em;\n`\nconst Page = styled.div`\n  padding: 1em;\n  background: mintcream;\n`\nconst Title = styled.div`\n  background: steelblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n  margin: 1em;\n  color: white;\n`\n\nconst Navigation = styled.div`\n  background: skyblue;\n  padding: 1em;\n  border: 1px solid black;\n  border-radius: 1px;\n`\nconst HappyNotification = styled.div`\n  margin: 1em;\n  padding: 0.5em 1.3em;\n  border: 2px solid black;\n  border-radius: 2px;\n  background: white;\n`\n\n\nconst OneThread = styled.div`\n  margin: 0.3em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n`\n\nconst CommentInformation = styled.div`\n  margin: 0.5em;\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: skyblue;\n  font-size: 0.75em;\n`\nconst CommentText = styled.div`\n\n  padding: 0.5em 1em;\n  border: 1px solid black;\n  background: white;\n  font-size: 1.2em;\n`\n\n\nexport { TextArea, Title, CommentInformation, CommentText, Button, Input, Page, Navigation, HappyNotification, OneThread, SmallButton }","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addThread } from './../reducers/threadReducer'\nimport { Input, TextArea, Button } from './Style'\n\nconst newThreadForm = (props) => {\n\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newMessage, setNewMessage] = useState('')\n\n  const handleTitleChange = (event) => {\n    setNewTitle(event.target.value)\n  }\n\n  const handleMessageChange = (event) => {\n    setNewMessage(event.target.value)\n  }\n\n  const addNewThread = async (event) => {\n    event.preventDefault()\n    const threadObject = {\n      title: newTitle,\n      message: newMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id\n    }\n\n    if (threadObject.title.length < 3) {\n      props.setNotification('Title must be at least three letters long')\n    } else if (threadObject.title.length > 100) {\n      props.setNotification('Title must be shorter than 100 letters')\n    } else if (threadObject.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (threadObject.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.addThread(threadObject)\n        props.setNotification('New thread added')\n        setNewTitle('')\n        setNewMessage('')\n      } catch (e) {\n        props.setNotification('Failed to create new comment')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h3>Add new thread</h3>\n      <form onSubmit={addNewThread}>\n        <div>\n          title:\n          <Input value={newTitle} id='NewTitle'\n            onChange={handleTitleChange} />\n        </div>\n        <div>\n          message:\n          <div>\n            <TextArea cols='50' rows='3' value={newMessage} id='NewMessage'\n              onChange={handleMessageChange} />\n          </div>\n        </div>\n        <Button type='submit'>add</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addThread\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newThreadForm)\n\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/comments'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n      \n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n  }\n  return null\n}\n\n\nconst update = async (updatedObject) => {\n\n  if (token!== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n\n    const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject, config)\n\n    return response.data\n  }\n\n  return null\n}\n\nconst removeComment = async (id) => {\n\n\n  if (token!==null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n \n    return response.data\n  }\n  return null\n}\n\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  removeToken,\n  update,\n  removeComment,\n  getToken\n}","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst removeToken = () => {\n  token = null\n}\n\nconst getToken = () => {\n  return token\n}\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n\n}\n\nconst removeUser = async (id) => {\n\n  if (token !== null) {\n    const config = {\n      headers: { Authorization: token },\n    }\n    const request = axios.delete(`${baseUrl}/${id}`, config)\n\n    return request.then(response => response.data)\n  }\n  return null\n}\n\nexport default {\n  getAll,\n  create,\n  removeUser,\n  removeToken,\n  setToken,\n  getToken\n}","import loginService from './../services/login'\nimport commentService from './../services/comments'\nimport threadService from './../services/threads'\nimport usersService from './../services/users'\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.data\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const setUser = (data) => {\n  return async dispatch => {\n    threadService.setToken(data.token)\n    commentService.setToken(data.token)\n    usersService.setToken(data.token)\n\n    dispatch({\n      type: 'LOGIN',\n      data: data\n    })\n  }\n}\n\n\n\nexport const login = (data) => {\n  return async dispatch => {\n\n    const user = await loginService.login(data)\n    window.localStorage.setItem(\n      'Campus24User', JSON.stringify(user)\n    )\n\n    threadService.setToken(user.token)\n    commentService.setToken(user.token)\n    usersService.setToken(user.token)\n  \n    dispatch({\n      type: 'LOGIN',\n      data: user\n    })\n\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.clear()\n    threadService.removeToken()\n    commentService.removeToken()\n    usersService.removeToken()\n\n    dispatch({\n      type: 'LOGOUT',\n    })\n  }\n}\n\n\nexport default loginReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { login } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Button, Input } from './Style'\n\nconst LoginForm = (props) => {\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = {\n      username: username,\n      password: password\n    }\n    try {\n      await props.login(user)\n      props.setNotification(`Welcome ${user.username}!`)\n    } catch (e) {\n      props.setNotification('Wrong username or password!')\n    }\n  }\n\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        <div>\n          username\n          <Input type=\"text\" value={username} name='Username' id='Username'\n            onChange={handleUsernameChange} />\n        </div>\n\n        <div>\n          password\n          <Input type=\"password\" value={password} name='Password' id='Password'\n            onChange={handlePasswordChange} />\n        </div>\n\n        <div>\n          <Button type='submit'>login</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  login\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import usersService from './../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INITIALIZE_USERS':\n    return action.data\n  case 'DELETE_USER':\n    // eslint-disable-next-line no-case-declarations\n    const newstate = state.filter(u => u.id !== action.data)\n    return newstate\n  default:\n    return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({\n      type: 'INITIALIZE_USERS',\n      data: users\n    })\n  }\n}\n\nexport const addUser = (data) => {\n  return async dispatch => {\n    const newUser = await usersService.create(data)\n    dispatch({\n      type: 'NEW_USER',\n      data: newUser\n    })\n  }\n}\n\nexport const deleteUser = (id) => {\n\n  return async dispatch => {\n    await usersService.removeUser(id)\n    dispatch({\n      type: 'DELETE_USER',\n      data: id\n    })\n  }\n}\n\n\nexport default usersReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { addUser } from './../reducers/usersReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Input, Button } from './Style'\n\nconst NewUserForm = (props) => {\n\n\n  if (props.user !== null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const [newUsername, setNewUsername] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewUsernameChange = (event) => {\n    setNewUsername(event.target.value)\n\n  }\n\n  const handleNewPasswordChange = (event) => {\n    setNewPassword(event.target.value)\n  }\n\n  const createNewUser = async (event) => {\n    event.preventDefault()\n\n    const newUserObject = {\n      name: newName,\n      username: newUsername,\n      password: newPassword\n    }\n\n    if (newUserObject.username.length < 3) {\n      props.setNotification('Username must be at least three letters long')\n    } else if (newUserObject.name.length < 3) {\n      props.setNotification('Name must be at least three letters long')\n    } else if (newUserObject.password.length < 5) {\n      props.setNotification('Password must be at least five letters long')\n    } else if (newUserObject.username.length > 15) {\n      props.setNotification('Username must be at shorter than 16 letters')\n    } else if (newUserObject.name.length > 15) {\n      props.setNotification('Name must be at shorter than 16 letters')\n    } else if (newUserObject.password.length > 30) {\n      props.setNotification('Password must be at shorter than 31 letters')\n\n    } else {\n      try {\n        await props.addUser(newUserObject)\n        props.setNotification('New user added!')\n        setNewName('')\n        setNewPassword('')\n        setNewUsername('')\n      } catch (e) {\n        props.setNotification('Username must be unique')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h3>Create new user</h3>\n      <form onSubmit={createNewUser}>\n        <div>\n          username\n          <Input type='text' value={newUsername} name='newUsername' id='newUsername'\n            onChange={handleNewUsernameChange} />\n        </div>\n        <div>\n          name\n          <Input type='text' value={newName} name='newName' id='newName'\n            onChange={handleNewNameChange} />\n        </div>\n        <div>\n          password\n          <Input type='password' value={newPassword} name='newPassword' id='newPassword'\n            onChange={handleNewPasswordChange} />\n        </div>\n        <Button type='submit'>Add a new user</Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  addUser,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { HappyNotification } from './Style'\n\nconst Notification = (props) => {\n  if (props.notification === null || props.notification === '') {\n    return null\n  }\n  return (\n    <div>\n      <HappyNotification>\n        {props.notification}\n      </HappyNotification>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps, null)(Notification)\n","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { OneThread } from './Style'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst allThreads = (props) => {\n  const [clickState, setClickState] = useState(1)\n\n  const countComments = (thread) => {\n\n    const commentsOfThread = props.comments.filter(c => c.thread === thread.id)\n    return commentsOfThread.length\n  }\n\n\n  let active = clickState\n  let items = []\n  const numberOfItems = props.threads.length\n  const itemsPerPage = 5\n  const numberOfpages = Math.ceil(numberOfItems/itemsPerPage)\n\n  for (let number = 1; number <= numberOfpages; number++) {\n    items.push(\n      <Pagination.Item onClick={() => {\n        setClickState(number)\n      }}\n      key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    )\n  }\n\n  const paginationBasic = (\n    <div>\n      <Pagination size=\"sm\">{items}</Pagination>\n    </div>\n  )\n\n\n  return (\n    <div>\n      {props.threads.slice(active*itemsPerPage - itemsPerPage, active*itemsPerPage).map(t =>\n        <OneThread key={t.id}>\n          <Link key={t.id} to={`/thread/${t.id}`}> {t.title} </Link>\n          &nbsp;&nbsp; comments {countComments(t)}\n\n          &nbsp;&nbsp; started by: {props.findUserNameById(t.user)}\n\n        </OneThread>\n      )}\n\n      {paginationBasic}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, null)(allThreads)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { logout } from './../reducers/loginReducer'\nimport { Button } from './Style'\n\n\nconst Logout = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const handleLogout = () => {\n\n    try {\n      props.logout()\n      props.setNotification('See you soon!')\n    } catch (e) {\n      console.log(e)\n      props.setNotification('Logout failed!')\n    }\n  }\n\n  return (\n    <div>\n      <h3>Logout</h3>\n      <Button onClick = {() => handleLogout()}>logout</Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import commentService from './../services/comments'\n\nconst commentReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'NEW_COMMENT':\n    return [...state, action.data]\n  case 'INITIALIZE_COMMENTS':\n    return action.data\n  case 'EDIT_COMMENT':\n    // eslint-disable-next-line no-case-declarations\n    const index = state.findIndex(c => c.id === action.data.id)\n    // eslint-disable-next-line no-case-declarations\n    const newState = [...state]\n    newState[index] = action.data\n    return newState\n  case 'DELETE_COMMENT':\n    return state.filter(c => c.id !== action.data)\n  default:\n    return state\n  }\n}\n\nexport const initializeComments = () => {\n  return async dispatch => {\n    const comments = await commentService.getAll()\n    dispatch({\n      type: 'INITIALIZE_COMMENTS',\n      data: comments\n    })\n  }\n}\n\nexport const addComment = (data) => {\n\n  return async dispatch => {\n    const newComment = await commentService.create(data)\n    dispatch({\n      type: 'NEW_COMMENT',\n      data: newComment\n    })\n  }\n}\n\n\nexport const editComment = (data) => {\n  return async dispatch => {\n    const editedComment = await commentService.update(data)\n\n    dispatch({\n      type: 'EDIT_COMMENT',\n      data: editedComment\n    })\n  }\n}\n\nexport const deleteComment = (data) => {\n\n  return async dispatch => {\n\n    await commentService.removeComment(data)\n\n    dispatch({\n      type: 'DELETE_COMMENT',\n      data: data\n    })\n  }\n}\n\n\nexport default commentReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteComment, editComment } from './../reducers/commentsReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\n\nconst Comment = (props) => {\n  const [editedMessage, setEditedMessage] = useState('')\n\n  let showButtons = false\n\n  if (props.comment === undefined || props.comment === null) {\n    return ('')\n  }\n\n  if (props.user === null) {\n\n    return (\n      <div>\n        <CommentInformation> Author: {props.findUserNameById(props.comment.user)} Date: {props.comment.date}\n          <CommentText> {props.comment.message} </CommentText>\n        </CommentInformation>\n      </div>\n    )\n  }\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  const deleteComment = async (id) => {\n\n    try {\n      await props.deleteComment(id)\n      props.setNotification('Comment deleted')\n    } catch (e) {\n      props.setNotification('Failed to delete comment')\n    }\n  }\n\n\n  const editComment = async (id) => {\n    const newCommentObject = props.comments.find(c => c.id === id)\n    const changedComment = { ...newCommentObject, message: editedMessage }\n\n    if (changedComment.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (changedComment.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.editComment(changedComment)\n        props.setNotification('Comment edited')\n        setEditedMessage('')\n\n      } catch (e) {\n        console.log(e)\n        props.setNotification('Failed to edit comment')\n      }\n    }\n  }\n\n  const editFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editComment'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editComment(props.comment.id, editedMessage)}> edit comment </SmallButton>\n      </div>\n      <SmallButton id='deleteComment' onClick={() => deleteComment(props.comment.id)}> delete comment </SmallButton>\n    </div>\n  )\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.comment.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div>\n      <CommentInformation> Author:  {props.findUserNameById(props.comment.user)} Date: {props.comment.date}\n        <CommentText> {props.comment.message}\n\n        </CommentText>\n        {showButtons && editFunction()}\n      </CommentInformation>\n\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteComment,\n  editComment,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { addComment } from './../reducers/commentsReducer'\nimport { Button, TextArea } from './Style'\n\nconst newCommentForm = props => {\n  const [commentMessage, setCommentMessage] = useState('')\n\n  const handleMessageChange = event => {\n    setCommentMessage(event.target.value)\n  }\n\n  const addNewComment = async () => {\n    const commentObject = {\n      message: commentMessage,\n      date: new Date().toISOString(),\n      userId: props.findUserIdByUsername(props.user.username).id,\n      threadId: props.threadId\n    }\n\n    if (commentObject.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (commentObject.message.length > 2000) {\n      props.setNotification('Message must be shoter than 2000 letters')\n    } else {\n      try {\n        await props.addComment(commentObject)\n        props.setNotification('New comment added')\n        setCommentMessage('')\n      } catch (e) {\n        props.setNotification('Failed to create new comment')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h4>Add new comment</h4>\n      <div>\n        <TextArea\n          rows=\"3\"\n          cols=\"50\"\n          value={commentMessage}\n          id=\"newComment\"\n          onChange={handleMessageChange}\n        />\n      </div>\n      <Button onClick={() => addNewComment()}>add</Button>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  setNotification,\n  addComment\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(newCommentForm)\n","import React, { useState } from 'react'\nimport Comment from './Comment'\nimport NewCommentForm from './NewCommentForm'\nimport { connect } from 'react-redux'\nimport { deleteThread, editThread } from './../reducers/threadReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { Redirect } from 'react-router-dom'\nimport { SmallButton, Input, CommentInformation, CommentText } from './Style'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst Thread = (props) => {\n\n  const [changeDone, setChangeDone] = useState(false)\n  const [editedMessage, setEditedMessage] = useState('')\n  const [clickState, setClickState] = useState(1)\n\n  const handleEditedChange = (event) => {\n    setEditedMessage(event.target.value)\n  }\n\n  if (changeDone) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  if (props.thread === undefined) {\n    return (\n      null\n    )\n  }\n\n  const deleteThread = async (id) => {\n\n    try {\n      await props.deleteThread(id)\n      props.setNotification('Thread deleted')\n      setChangeDone(true)\n    } catch (e) {\n      props.setNotification('Failed to delete thread')\n    }\n  }\n\n  const editThread = async (id) => {\n\n    const newThreadObject = props.threads.find(t => t.id === id)\n    const changedThread = { ...newThreadObject, message: editedMessage }\n\n    if (changedThread.message.length < 3) {\n      props.setNotification('Message must be at least three letters long')\n    } else if (changedThread.message.length > 2000) {\n      props.setNotification('Message must be shorter than 2000 letters')\n    } else {\n      try {\n        await props.editThread(changedThread)\n        props.setNotification('Thread edited')\n        setEditedMessage('')\n\n      } catch (e) {\n        props.setNotification('Failed to edit thread')\n        setEditedMessage('')\n      }\n    }\n  }\n\n\n\n  const findComments = () => {\n    const threadComments = props.comments.filter(c => c.thread === props.thread.id)\n    return threadComments\n  }\n\n  const threadComments = findComments()\n  let active = clickState\n  let items = []\n  const numberOfItems = threadComments.length\n  const itemsPerPage = 5\n  const numberOfPages = Math.ceil(numberOfItems / itemsPerPage)\n\n  for (let number = 1; number <= numberOfPages; number++) {\n    items.push(\n      <Pagination.Item onClick={() => {\n        setClickState(number)\n      }} key={number} active={number === active}>\n        {number}\n      </Pagination.Item>\n    )\n  }\n\n  const paginationBasic = (\n    <div>\n      <Pagination size='sm'> {items} </Pagination>\n    </div>\n  )\n\n  if (props.user === null) {\n\n\n    return (\n      <div className='thread'>\n        <CommentInformation>\n          <h3>{props.thread.title}</h3>\n          Author: {props.findUserNameById(props.thread.user)}\n          <CommentText>{props.thread.message}</CommentText>\n        </CommentInformation>\n        Comments\n\n        {threadComments.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(c =>\n          <Comment key={c.id} comment={c} findUserNameById={props.findUserNameById} />)}\n\n        {paginationBasic}\n      </div>\n    )\n  }\n\n  const buttonFunction = () => (\n    <div>\n      <div>\n        new message\n        <Input value={editedMessage} id='editMessage'\n          onChange={handleEditedChange} />\n        <SmallButton onClick={() => editThread(props.thread.id, editedMessage)}> edit </SmallButton>\n      </div>\n\n      <SmallButton id='deleteThread' onClick={() => deleteThread(props.thread.id)}> delete </SmallButton>\n    </div>\n  )\n\n  let showButtons = false\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n\n  }\n\n  if (findUserIdByUsername(props.user.username) !== undefined && props.thread.user === findUserIdByUsername(props.user.username).id) {\n    showButtons = true\n  }\n\n\n  return (\n    <div className='thread'>\n      <CommentInformation>\n        <h3>{props.thread.title}</h3>\n        Author: {props.findUserNameById(props.thread.user)}\n        <CommentText>{props.thread.message}</CommentText>\n        {showButtons && buttonFunction()}\n      </CommentInformation>\n      Comments\n      {threadComments.slice(active * itemsPerPage - itemsPerPage, active * itemsPerPage).map(c =>\n        <Comment comment={c} key={c.id} findUserNameById={props.findUserNameById} />)}\n\n      {paginationBasic}\n      <NewCommentForm\n        findUserIdByUsername={props.findUserIdByUsername}\n        threadId={props.thread.id} />\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  deleteThread,\n  editThread,\n  setNotification\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thread)","import { connect } from 'react-redux'\nimport React from 'react'\nimport { logout } from './../reducers/loginReducer'\nimport { setNotification } from './../reducers/notificationReducer'\nimport { deleteUser } from './../reducers/usersReducer'\nimport { deleteThread } from './../reducers/threadReducer'\nimport { deleteComment } from './../reducers/commentsReducer'\nimport { Redirect } from 'react-router-dom'\nimport { Button } from './Style'\n\nconst DeleteAccount = (props) => {\n\n  if (props.user === null) {\n    return (\n      <div>\n        <Redirect to=\"/\" />\n      </div>\n    )\n  }\n\n  const deleteAccountFunction = async () => {\n    const loggedUser = props.users.find(u => u.username === props.user.username)\n\n    try {\n\n      await props.deleteUser(loggedUser.id)\n      props.setNotification('Account deleted!')\n      props.logout()\n\n    } catch (e) {\n      console.log('error:', e)\n      props.setNotification('Could not delete account!')\n    }\n  }\n\n  return (\n    <div>\n      Are you sure that you want to delete your account?\n      <div>\n        <Button onClick={() => deleteAccountFunction()}>Confirm</Button>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  logout,\n  setNotification,\n  deleteUser,\n  deleteThread,\n  deleteComment\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    user: state.user,\n    threads: state.threads,\n    users: state.users,\n    comments: state.comments\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteAccount)","import React, { useEffect } from 'react'\nimport NewThreadForm from './components/NewThreadForm'\nimport LoginForm from './components/Login'\nimport NewUserFrom from './components/NewUserForm'\nimport Notification from './components/Notification'\nimport AllThreads from './components/AllThreads'\nimport Logout from './components/Logout'\nimport Thread from './components/Thread'\nimport DeleteAccount from './components/DeleteAccount'\nimport { Page, Navigation, Title } from './components/Style'\n\nimport './index.css'\nimport { connect } from 'react-redux'\nimport { initializeThreads } from './reducers/threadReducer'\nimport { initializeComments } from './reducers/commentsReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport { setUser } from './reducers/loginReducer'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initializeThreads()\n    props.initializeComments()\n    props.initializeUsers()\n\n    const loggedUserJSON = window.localStorage.getItem('Campus24User')\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      props.setUser(user)\n    }\n  }, [])\n\n\n\n  const findUserIdByUsername = (username) => {\n    const user = props.users.find(u => u.username === username)\n    return user\n  }\n\n  const findUserNameById = (id) => {\n\n    const user = props.users.find(u => u.id === id)\n    if (user === null || user === undefined) {\n      return 'unknown user'\n    }\n    return user.username\n  }\n\n  const findThreadIdById = (id) => {\n    const thread = props.threads.find(t => t.id === id)\n    return thread\n\n  }\n\n\n  const padding = { padding: 5 }\n\n\n  return (\n    <div>\n      <Page>\n        <Router>\n          <div>\n            <div>\n              <Title>\n                <h1>Campus24</h1>\n                <Navigation>\n                  <Link style={padding} to=\"/\">Threads</Link>\n                  {props.user === null &&\n                    <Link style={padding} to=\"/login\">Login</Link>}\n                  {props.user === null &&\n                    <Link style={padding} to=\"/create\">Create new user</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/logout\">Logout</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/addNewThread\">Add a new thread</Link>}\n                  {props.user !== null && <Link style={padding} to=\"/deleteAccount\">Delete account</Link>}\n                </Navigation>\n              </Title>\n              {props.notification !== null && <Notification />}\n            </div>\n            <Route exact path=\"/\" render={() => <AllThreads findUserNameById={findUserNameById} />} />\n            <Route exact path=\"/login\" render={() => <LoginForm />} />\n            <Route exact path=\"/create\" render={() => <NewUserFrom />} />\n            <Route exact path=\"/logout\" render={() => <Logout />} />\n            <Route exact path=\"/deleteAccount\" render={() => <DeleteAccount />} />\n            <Route exact path=\"/addNewThread\" render={() => <NewThreadForm findUserIdByUsername={findUserIdByUsername} />} />\n            <Route exact path=\"/thread/:id\" render={({ match }) =>\n              <Thread thread={findThreadIdById(match.params.id)}\n                findUserIdByUsername={findUserIdByUsername} findUserNameById={findUserNameById} />}\n            />\n          </div>\n        </Router>\n      </Page>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  initializeThreads,\n  initializeComments,\n  initializeUsers,\n  setUser\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    threads: state.threads,\n    comments: state.comments,\n    users: state.users,\n    user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport threadReducer from './reducers/threadReducer'\nimport commentReducer from './reducers/commentsReducer'\nimport usersReducer from './reducers/usersReducer'\nimport loginReducer from './reducers/loginReducer'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  threads: threadReducer,\n  comments: commentReducer,\n  users: usersReducer,\n  user: loginReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './index.css'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n"],"sourceRoot":""}